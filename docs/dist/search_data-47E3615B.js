searchData={"items":[{"type":"module","title":"AuctionHouse","doc":"Library representing the interface for the auction house.\nResponsible for making calls and decoding the answers from the auction house\ninto a format the manager understands.","ref":"AuctionHouse.html"},{"type":"function","title":"AuctionHouse.delete_order/1","doc":"Deletes an order from warframe market asynchronously.\nNotifies invoking process asynchronously with placed order or with error.\n\nExample:\n```\n> alias Shared.Data.PlacedOrder\n> placed_order = PlacedOrder.new(%{\n    \"item_id\" => \"54e644ffe779897594fa68cd\",\n    \"order_id\" => \"626127cbc984ac033cd2bbd2\"\n})\n\n> AuctionHouse.delete_order(placed_order)\n:ok\n\nThe received messages will one of the following formats:\n\n- {:delete_order, {:ok, %PlacedOrder{item_id: \"54e644ffe779897594fa68cd\", order_id: \"626127cbc984ac033cd2bbd2\"}}}\n- {:delete_order, {:error, {reason, err}}}\n```","ref":"AuctionHouse.html#delete_order/1"},{"type":"function","title":"AuctionHouse.get_item_orders/1","doc":"Gets all warframe market orders for the item with the given name.\nThe item's name is in human readable format. This function also converts the\nname into a format that the external party can understand.\nNotifies invoking process asynchronously with a list of OrderInfo or with error.\n\nExample:\n```\n> alias Shared.Data.OrderInfo\n> item_name = \"Despoil\"\n\n> AuctionHouse.get_item_orders(item_name)\n> :ok\n\nThe received messages will one of the following formats:\n\n- {:get_item_orders,  {:ok, \"Despoil\", [%OrderInfo{\"visible\" => true, \"order_type\" => \"sell\", \"platform\" => \"pc\",\n  \"platinum\" => 20, \"user\" => %OrderInfo.User{\"ingame_name\" => \"user_name_1\", \"status\" => \"ingame\"}}]}\n- {:get_item_orders, {:error, \"Despoil\", {reason, err}}}\n```","ref":"AuctionHouse.html#get_item_orders/1"},{"type":"function","title":"AuctionHouse.get_saved_login/0","doc":"Returns the authorization and user directly from state.\nSynchronous call, will only fail if this service is down.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n> auth = Authorization.new(\"a_cookie\", \"a_token\")\n> user = User.new(\"fl4m3\", false)\n\n> AuctionHouse.get_saved_login()\n{:ok, {%Authorization{}, %User{}}}\n\n> AuctionHouse.get_saved_login()\n{:error, :reason}\n```","ref":"AuctionHouse.html#get_saved_login/0"},{"type":"function","title":"AuctionHouse.get_user_orders/1","doc":"Gets all warframe market sell orders for the given user.\nNotifies invoking process asynchronously with a list of user PlacedOrders or with error.\n\nExample:\n```\n> AuctionHouse.get_user_orders(\"Fl4m3\")\n> :ok\n\nThe received messages will one of the following formats:\n\n- {:get_user_orders, {:ok,\n  [\n    %PlacedOrder{\n      order_id: \"66058313a9630600302d4889\",\n      item_id: \"55108594e77989728d5100c6\"\n    },\n    %PlacedOrder{\n      order_id: \"6605832ea96306003657a90d\",\n      item_id: \"54e644ffe779897594fa68d2\"\n    }\n  ]\n}}\n\n- {:get_user_orders, {:error, {reason, err}}}\n```","ref":"AuctionHouse.html#get_user_orders/1"},{"type":"function","title":"AuctionHouse.login/1","doc":"Authenticates the user with the auction house and saves the session.\nMust be invoked every time the application is launched.\nNotifies invoking process asynchronously with user information or with error.\n\nExample:\n```\n> alias Shared.Data.{Authorization, Credentials, User}\n> credentials = Credentials.new(\"the_username\", \"the_password\")\n\n> AuctionHouse.login(credentials)\n:ok\n\nThe received messages will one of the following formats:\n\n- {:login, {:ok, { %Authorization{cookie: \"a_cookie\", token: \"a_token\"}, %User{patreon?: false, ingame_name: \"fl4m3\"}}}}\n- {:login, {:error, {reason, err}}}\n\n```","ref":"AuctionHouse.html#login/1"},{"type":"function","title":"AuctionHouse.logout/0","doc":"Deletes the current session and user data from the this application.\nDoes not interact with the External AuctionHouse, this is a local operation only.\nWill only fail if this service is down.\n\nExample:\n```\n> AuctionHouse.logout()\n:ok\n```","ref":"AuctionHouse.html#logout/0"},{"type":"function","title":"AuctionHouse.place_order/1","doc":"Places an order in warframe market.\nNotifies invoking process asynchronously with placed order or with error.\n\nExample:\n```\n> alias Shared.Data.{Order, PlacedOrder}\n> order = Order.new(%{\n  \"item_id\" => \"54e644ffe779897594fa68cd\",\n  \"mod_rank\" => 0,\n  \"order_type\" => \"sell\",\n  \"platinum\" => 20,\n  \"quantity\" => 1\n})\n\n> AuctionHouse.place_order(order)\n:ok\n\nThe received messages will one of the following formats:\n\n- {:place_order, {:ok, %PlacedOrder{item_id: \"54a74454e779892d5e5155d5\", order_id: \"66b9c7aa6b17410a57974e4b\"}}}\n- {:place_order, {:error, {reason, err}}}\n```","ref":"AuctionHouse.html#place_order/1"},{"type":"function","title":"AuctionHouse.update_login/2","doc":"Feeds the authorization information directly to the AuctionHouse. Used when\nthe login data is being recovered from a past login to update the this service's state.\nSynchronous call, will only fail if this service is down.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n> auth = Authorization.new(\"a_cookie\", \"a_token\")\n> user = User.new(\"fl4m3\", false)\n\n> AuctionHouse.update_login(auth, user)\n:ok\n```","ref":"AuctionHouse.html#update_login/2"},{"type":"module","title":"AuctionHouse.Impl.HttpAsyncClient","doc":"Asynchronous HTTP client for the auction house. Makes requests to the auction house's API and converts errors into a\nformat friendly to the application.\nUses a rate limiter to avoid overloading the external API.","ref":"AuctionHouse.Impl.HttpAsyncClient.html"},{"type":"type","title":"AuctionHouse.Impl.HttpAsyncClient.body/0","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#t:body/0"},{"type":"type","title":"AuctionHouse.Impl.HttpAsyncClient.data/0","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#t:data/0"},{"type":"function","title":"AuctionHouse.Impl.HttpAsyncClient.delete/5","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#delete/5"},{"type":"function","title":"AuctionHouse.Impl.HttpAsyncClient.get/5","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#get/5"},{"type":"function","title":"AuctionHouse.Impl.HttpAsyncClient.handle_response/2","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#handle_response/2"},{"type":"type","title":"AuctionHouse.Impl.HttpAsyncClient.headers/0","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#t:headers/0"},{"type":"function","title":"AuctionHouse.Impl.HttpAsyncClient.post/6","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#post/6"},{"type":"type","title":"AuctionHouse.Impl.HttpAsyncClient.url/0","doc":"","ref":"AuctionHouse.Impl.HttpAsyncClient.html#t:url/0"},{"type":"behaviour","title":"AuctionHouse.Impl.UseCase","doc":"Represents an action a user takes against the auction house's API, such as creating an order or checking user info.\nEach action has a start and a finish, with possibly many steps in the middle. This behaviour only cares about the\nfirst and the last, so other modules are notified when an user action starts or finishes.\n\nUses structures to encode the format of requests and responses being passed around the flow.","ref":"AuctionHouse.Impl.UseCase.html"},{"type":"callback","title":"AuctionHouse.Impl.UseCase.finish/1","doc":"The last function to be called on a UseCase, marking the end of such. Once this function is invoked, no followups are\nallowed and the process running it will notify the interested parties (see Metadata.notify) of the result.","ref":"AuctionHouse.Impl.UseCase.html#c:finish/1"},{"type":"callback","title":"AuctionHouse.Impl.UseCase.start/1","doc":"Starts a use case, by passing in a Request. This Request will then be used to make a request to a 3rd party library\nthat will communicate with the auction house's API. The start function may call directly the finish function, or\nmay call another function if the flow is more complex, which will then eventually call `finish`.","ref":"AuctionHouse.Impl.UseCase.html#c:start/1"},{"type":"module","title":"AuctionHouse.Impl.UseCase.Data.Metadata","doc":"Data about the Request or Response being made.\nIncludes information important for 3rd party modules to use but that is not related to the arguments of the flow\nitself.\n\nUsed mostly to notify interested parties of the results of the flow.\nWhen the flow is done, the \"send?\" field should be set to `true` so the handler know it has to send the results back\nto the interested parties.","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Data.Metadata.mark_to_send/1","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html#mark_to_send/1"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Data.Metadata.new/3","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html#new/3"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Metadata.notify/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html#t:notify/0"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Metadata.operation/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html#t:operation/0"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Metadata.send?/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html#t:send?/0"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Metadata.t/0","doc":"Represents metadata about the request/response.","ref":"AuctionHouse.Impl.UseCase.Data.Metadata.html#t:t/0"},{"type":"module","title":"AuctionHouse.Impl.UseCase.Data.Request","doc":"Represents a request made to a third party.\nThe `args` field should contain the parameters necessary for the function call.","ref":"AuctionHouse.Impl.UseCase.Data.Request.html"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Request.args/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Request.html#t:args/0"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Data.Request.finish/1","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Request.html#finish/1"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Data.Request.new/2","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Request.html#new/2"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Data.Request.put_arg/3","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Request.html#put_arg/3"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Request.t/0","doc":"Represents a Request to be made to a 3rd party.","ref":"AuctionHouse.Impl.UseCase.Data.Request.html#t:t/0"},{"type":"module","title":"AuctionHouse.Impl.UseCase.Data.Response","doc":"Represents a response from a 3rd party, parsed to be more user friendly and to abstract the format of the libraries\nbellow.\n\nContains the original Request arguments, for cases when knowing the original information is important.","ref":"AuctionHouse.Impl.UseCase.Data.Response.html"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Response.body/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Response.html#t:body/0"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Response.headers/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Response.html#t:headers/0"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Data.Response.new/4","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Response.html#new/4"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Response.request_args/0","doc":"","ref":"AuctionHouse.Impl.UseCase.Data.Response.html#t:request_args/0"},{"type":"type","title":"AuctionHouse.Impl.UseCase.Data.Response.t/0","doc":"A Response from a 3rd party.","ref":"AuctionHouse.Impl.UseCase.Data.Response.html#t:t/0"},{"type":"module","title":"AuctionHouse.Impl.UseCase.DeleteOrder","doc":"Sends a delete request to the given PlacedOrder. Returns the deleted PlacedOrder if successful.","ref":"AuctionHouse.Impl.UseCase.DeleteOrder.html"},{"type":"module","title":"AuctionHouse.Impl.UseCase.GetItemOrders","doc":"Requests all the sell orders for the item with the given name.","ref":"AuctionHouse.Impl.UseCase.GetItemOrders.html"},{"type":"module","title":"AuctionHouse.Impl.UseCase.GetUserOrders","doc":"Requests all the orders from the user with the given username and parses them.","ref":"AuctionHouse.Impl.UseCase.GetUserOrders.html"},{"type":"module","title":"AuctionHouse.Impl.UseCase.Login","doc":"Contains all the logic to parse and login a user asynchronously.","ref":"AuctionHouse.Impl.UseCase.Login.html"},{"type":"function","title":"AuctionHouse.Impl.UseCase.Login.sign_in/2","doc":"","ref":"AuctionHouse.Impl.UseCase.Login.html#sign_in/2"},{"type":"module","title":"AuctionHouse.Impl.UseCase.PlaceOrder","doc":"Places a sell order in the auction house and returns the result as a PlacedOrder.","ref":"AuctionHouse.Impl.UseCase.PlaceOrder.html"},{"type":"module","title":"AuctionHouse.Runtime.AuctionSupervisor","doc":"Supervisor of the AuctionHouse application that supervises both the RateLimiter and the Server.","ref":"AuctionHouse.Runtime.AuctionSupervisor.html"},{"type":"function","title":"AuctionHouse.Runtime.AuctionSupervisor.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"AuctionHouse.Runtime.AuctionSupervisor.html#child_spec/1"},{"type":"function","title":"AuctionHouse.Runtime.AuctionSupervisor.start_link/0","doc":"","ref":"AuctionHouse.Runtime.AuctionSupervisor.html#start_link/0"},{"type":"module","title":"AuctionHouse.Runtime.Server","doc":"Process responsible for managing requests to the auction house.\nTalks to the logic layer and terminates gracefully.","ref":"AuctionHouse.Runtime.Server.html"},{"type":"function","title":"AuctionHouse.Runtime.Server.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"AuctionHouse.Runtime.Server.html#child_spec/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.delete_order/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#delete_order/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.get_item_orders/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#get_item_orders/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.get_saved_login/0","doc":"","ref":"AuctionHouse.Runtime.Server.html#get_saved_login/0"},{"type":"function","title":"AuctionHouse.Runtime.Server.get_user_orders/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#get_user_orders/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.login/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#login/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.logout/0","doc":"","ref":"AuctionHouse.Runtime.Server.html#logout/0"},{"type":"function","title":"AuctionHouse.Runtime.Server.place_order/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#place_order/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.start_link/0","doc":"","ref":"AuctionHouse.Runtime.Server.html#start_link/0"},{"type":"function","title":"AuctionHouse.Runtime.Server.update_login/2","doc":"","ref":"AuctionHouse.Runtime.Server.html#update_login/2"},{"type":"module","title":"AuctionHouse.Type","doc":"Holds the types for this library.","ref":"AuctionHouse.Type.html"},{"type":"type","title":"AuctionHouse.Type.delete_order_response/0","doc":"","ref":"AuctionHouse.Type.html#t:delete_order_response/0"},{"type":"type","title":"AuctionHouse.Type.get_item_orders_response/0","doc":"","ref":"AuctionHouse.Type.html#t:get_item_orders_response/0"},{"type":"type","title":"AuctionHouse.Type.get_saved_login_response/0","doc":"","ref":"AuctionHouse.Type.html#t:get_saved_login_response/0"},{"type":"type","title":"AuctionHouse.Type.get_user_orders_response/0","doc":"","ref":"AuctionHouse.Type.html#t:get_user_orders_response/0"},{"type":"type","title":"AuctionHouse.Type.item_id/0","doc":"","ref":"AuctionHouse.Type.html#t:item_id/0"},{"type":"type","title":"AuctionHouse.Type.item_name/0","doc":"","ref":"AuctionHouse.Type.html#t:item_name/0"},{"type":"type","title":"AuctionHouse.Type.login_response/0","doc":"","ref":"AuctionHouse.Type.html#t:login_response/0"},{"type":"type","title":"AuctionHouse.Type.logout_response/0","doc":"","ref":"AuctionHouse.Type.html#t:logout_response/0"},{"type":"type","title":"AuctionHouse.Type.place_order_response/0","doc":"","ref":"AuctionHouse.Type.html#t:place_order_response/0"},{"type":"type","title":"AuctionHouse.Type.reason/0","doc":"","ref":"AuctionHouse.Type.html#t:reason/0"},{"type":"type","title":"AuctionHouse.Type.state/0","doc":"","ref":"AuctionHouse.Type.html#t:state/0"},{"type":"type","title":"AuctionHouse.Type.update_login_response/0","doc":"","ref":"AuctionHouse.Type.html#t:update_login_response/0"},{"type":"type","title":"AuctionHouse.Type.username/0","doc":"","ref":"AuctionHouse.Type.html#t:username/0"},{"type":"module","title":"Manager","doc":"MarketManager is an application that allows you to make batch requests to\nwarframe.market. This is the entrypoint of everything. If you have a module\nand you need to talk to MarketManager, this is who you call, the public API.","ref":"Manager.html"},{"type":"function","title":"Manager.activate/1","doc":"Asynchronous operation.\n\nActivates a syndicate in warframe.market. Activating a syndicate means you\nput on sell all the mods/arcanes the syndicate has. The price of each mod will be calculated via a\n`PriceAnalyst` depending on which strategy you choose.\n\nThis is an asynchronous operation, which will return `:ok` immediately.\nThe caller must have implemented a `handle_info` in its Server to handle messages with the\nfollowing format:\n\n- `{:activate, {:ok, :get_user_orders}}`: Informs that a request was made to get current user orders.\n- `{:activate, {:ok, :calculating_item_prices}}`: Informs that the Manager is now calculating prices for all the items of the selected syndicates.\n- `{:activate, {:ok, {:price_calculated, item_name, price, current_progress, total_progress}}}`: Informs that \"price\" was successfully calculated for \"item_name\". It also give the \"current_progress\" and \"total_progress\" for the caller to know how long the operation will take.\n- `{:activate, {:ok, :placing_orders}}`: Informs that the final stage, of placing orders, has now begun.\n- `{:activate, {:ok, {:order_placed, item_name, current_progress, total_progress}}}`: Informs that an order with \"price\" was successfully posted in Warframe Market for \"item_name\". It also gives the \"current_progress\" and \"total_progress\" for the caller to know how long the operation will take.\n- `{:activate, {:ok, :done}}`: Informs the process is now complete.\n\nAny other received messages will be of the format `{:error, any()}` and mean that something has failed during the activation process.\n\n\nExample:\n```\n> Manager.activate(%{cephalon_simaris: :lowest_minus_one})\n:ok\n```","ref":"Manager.html#activate/1"},{"type":"function","title":"Manager.active_syndicates/0","doc":"Synchronous operation.\n\nReturns a list containing all currently active syndicates with their strategies.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> MarketManager.active_syndicates()\n{:ok, %{red_veil: :top_five_average, new_loka: :top_five_average}}\n\n> Manager.active_syndicates()\n{:error, :enoent}\n```","ref":"Manager.html#active_syndicates/0"},{"type":"function","title":"Manager.deactivate/1","doc":"Asynchronous operation.\n\nDeactivates a syndicate in warframe.market. Deactivating a syndicate means you delete all orders you have placed that belong to the given syndicate.\n\nThis is an asynchronous operation, which will return `:ok` immediately.\nThe caller must have implemented a `handle_info` in its Server to handle messages with the following format:\n\n- `{:deactivate, {:ok, :get_user_orders}}`: Informs that a request was made to get current user orders.\n- `{:deactivate, {:ok, :deleting_orders}}`: Informs that the Manager started deleting orders.\n- `{:deactivate, {:ok, {:order_deleted, item_name, current_progress, total_progress}}}`: Informs that the order for \"item_name\" was successfully deleted in Warframe Market. It also gives the \"current_progress\" and \"total_progress\" for the caller to know how long the operation will take.\n- `{:deactivate, {:ok, :done}}`: Informs the process is not complete.\n\nOptionally, if the deactivation was partial, meaning there are still some syndicates active, instead of receiving `{:deactivate, {:ok, :done}}`, the caller will instead receive:\n- `{:deactivate, {:ok, :reactivating_remaining_syndicates}}`\n\nWhich informs that the activation process for the remaining syndicates will now begin, in order to update the selection of current items on sale and their prices. Consequently, all messages from the Activation process also need to be handled by the caller.\n\nExample:\n```\n> Manager.deactivate([:cephalon_simaris])\n:ok\n```","ref":"Manager.html#deactivate/1"},{"type":"function","title":"Manager.login/2","doc":"Asynchronous operation.\n\nSaves the login information used in all requests. Can optionally keep user\nlogged in for future sessions. Will first attempt to authenticate the user,\nand then, if successful and if `keep_logged_in` is `true`, will try to save\nthe authentication parameters. Should it fail to save the authentication\nparameters, the login request is still done.\n\nThis is an asynchronous operation, which will return `:ok` immediately.\nThe caller must have implemented a `handle_info` in its Server to handle messages with the\nfollowing format:\n\n- `{:login, {:ok, user_info :: Shared.Data.User.t()}}`: If the operation was successful.\n\n- `{:login, {:error, error :: any()}}`: If the login operation failed.\n  This can happen due to a network error, wrong password or any other cause.\n\nExample:\n```\n> alias Shared.Data.Credentials\n\n> credentials = Credentials.new(\"username\", \"password\")\n\n> Manager.login(credentials, false)\n:ok\n```","ref":"Manager.html#login/2"},{"type":"function","title":"Manager.logout/0","doc":"Synchronous operation.\n\nDeletes the current active session. This only logs out the MarketManager application and does not affect the\nlogin session in the AuctionHouse. If a user is logged in the AuctionHouse, it will continue  to be logged in there,\nbut next time this application is launched, the user will have to login into the AuctionHouse from this application\nto be able to use it.\n\nThis operation deletes the sessions data from memory and from disk. Even if the second fails, the first will still\nbe attempted.\n\nExample:\n```\n> Manager.logout()\n:ok\n\n> Manager.logout()\n{:error, :reason}\n```","ref":"Manager.html#logout/0"},{"type":"function","title":"Manager.recover_login/0","doc":"Synchronous operation.\n\nLogin into the application using a previous session.\nIf this operation is attempted and the user has not logged in yet, `nil` is returned instead of a User.\n\nExample:\n```\n> alias Shared.Data.User\n\n> Manager.recover_login()\n{:ok, %User{ingame_name: \"user_1\", patreon?: false}}\n\n> Manager.recover_login()\n{:ok, nil}\n\n> Manager.recover_login()\n{:error, :enoent}\n```","ref":"Manager.html#recover_login/0"},{"type":"function","title":"Manager.strategies/0","doc":"Synchronous operation.\n\nReturns the list of available strategies, or an error if it fails.\n\nExample:\n```\n> alias Shared.Data.Strategy\n\n> Manager.strategies()\n{:ok, [\n  %Strategy{\n    name: \"Top 3 Average\",\n    id: :top_three_average,\n    description: \"Gets the 3 lowest prices for the given item and calculates the average.\"\n  },\n  %Strategy{\n    name: \"Top 5 Average\",\n    id: :top_five_average,\n    description: \"Gets the 5 lowest prices for the given item and calculates the average.\"\n  }\n]}\n\n> Manager.strategies()\n{:error, :reason}\n```","ref":"Manager.html#strategies/0"},{"type":"function","title":"Manager.syndicates/0","doc":"Synchronous operation.\n\nReturns the list of known syndicates, or an error if it fails.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> MarketManager.syndicates()\n{:ok, [%Syndicate{name: \"Red Veil\", id: :red_veil, catalog: []}]}\n\n> Manager.syndicates()\n{:error, :enoent}\n```","ref":"Manager.html#syndicates/0"},{"type":"module","title":"Manager.Impl.PriceAnalyst","doc":"Strategies calculate the optimum price for you to sell an item.\n\nThere are several strategies, some focus more on selling fast, while others\non getting more profit.\n\nThe strategy to use is selected at runtime. See the Manager.Impl.Strategy for more information on this.","ref":"Manager.Impl.PriceAnalyst.html"},{"type":"function","title":"Manager.Impl.PriceAnalyst.calculate_price/3","doc":"","ref":"Manager.Impl.PriceAnalyst.html#calculate_price/3"},{"type":"function","title":"Manager.Impl.PriceAnalyst.list_strategies/0","doc":"","ref":"Manager.Impl.PriceAnalyst.html#list_strategies/0"},{"type":"behaviour","title":"Manager.Impl.Strategy","doc":"Behaviour that specifies the functions any strategy must implement. It is mostly used to provide an implementation of\nthe Strategy pattern from OO languages, but adapted to Elixir.\n\nThe pricing strategy will be selected and executed dynamically at runtime, as long as it implements this behaviour.","ref":"Manager.Impl.Strategy.html"},{"type":"callback","title":"Manager.Impl.Strategy.calculate_price/1","doc":"","ref":"Manager.Impl.Strategy.html#c:calculate_price/1"},{"type":"function","title":"Manager.Impl.Strategy.id_to_module/1","doc":"","ref":"Manager.Impl.Strategy.html#id_to_module/1"},{"type":"callback","title":"Manager.Impl.Strategy.info/0","doc":"","ref":"Manager.Impl.Strategy.html#c:info/0"},{"type":"function","title":"Manager.Impl.Strategy.module_to_id/1","doc":"","ref":"Manager.Impl.Strategy.html#module_to_id/1"},{"type":"module","title":"Manager.Impl.Strategy.EqualToLowest","doc":"Gets the lowest price for the given item and uses it.","ref":"Manager.Impl.Strategy.EqualToLowest.html"},{"type":"module","title":"Manager.Impl.Strategy.LowestMinusOne","doc":"Gets the lowest price for the given item and beats it by 1.","ref":"Manager.Impl.Strategy.LowestMinusOne.html"},{"type":"module","title":"Manager.Impl.Strategy.TopFiveAverage","doc":"Gets the 5 lowest prices for the given item and calculates the average.","ref":"Manager.Impl.Strategy.TopFiveAverage.html"},{"type":"module","title":"Manager.Impl.Strategy.TopThreeAverage","doc":"Gets the 3 lowest prices for the given item and calculates the average.","ref":"Manager.Impl.Strategy.TopThreeAverage.html"},{"type":"module","title":"Manager.Runtime.ManagerSupervisor","doc":"Process responsible for taking requests from the interface and directing them\nto the appropriate layers. Supervises dependencies to make sure they are\nregenerated should something fail.","ref":"Manager.Runtime.ManagerSupervisor.html"},{"type":"function","title":"Manager.Runtime.ManagerSupervisor.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Runtime.ManagerSupervisor.html#child_spec/1"},{"type":"function","title":"Manager.Runtime.ManagerSupervisor.start_link/0","doc":"","ref":"Manager.Runtime.ManagerSupervisor.html#start_link/0"},{"type":"module","title":"Manager.Runtime.SagaSupervisor","doc":"Interface between the manager and the saga processes. Uses a Dynamic Supervisor to keep the application always\nrunning.","ref":"Manager.Runtime.SagaSupervisor.html"},{"type":"function","title":"Manager.Runtime.SagaSupervisor.activate/2","doc":"","ref":"Manager.Runtime.SagaSupervisor.html#activate/2"},{"type":"function","title":"Manager.Runtime.SagaSupervisor.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Runtime.SagaSupervisor.html#child_spec/1"},{"type":"function","title":"Manager.Runtime.SagaSupervisor.deactivate/1","doc":"","ref":"Manager.Runtime.SagaSupervisor.html#deactivate/1"},{"type":"function","title":"Manager.Runtime.SagaSupervisor.login/2","doc":"","ref":"Manager.Runtime.SagaSupervisor.html#login/2"},{"type":"function","title":"Manager.Runtime.SagaSupervisor.start_link/1","doc":"","ref":"Manager.Runtime.SagaSupervisor.html#start_link/1"},{"type":"module","title":"Manager.Runtime.Worker","doc":"Process responsible for doing asynchronous tasks. The Worker is supervised by the `Server` and is\nrestarted should something fail. It communicates with the calling client via `send/2`, since we\ndon't know if the client is a `GenServer` or not. Should this change (and we are sure the client\nis a `GenServer`) then `GenServer.cast` should be used instead.","ref":"Manager.Runtime.Worker.html"},{"type":"function","title":"Manager.Runtime.Worker.active_syndicates/0","doc":"","ref":"Manager.Runtime.Worker.html#active_syndicates/0"},{"type":"function","title":"Manager.Runtime.Worker.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Runtime.Worker.html#child_spec/1"},{"type":"function","title":"Manager.Runtime.Worker.logout/0","doc":"","ref":"Manager.Runtime.Worker.html#logout/0"},{"type":"function","title":"Manager.Runtime.Worker.recover_login/0","doc":"","ref":"Manager.Runtime.Worker.html#recover_login/0"},{"type":"function","title":"Manager.Runtime.Worker.start_link/1","doc":"","ref":"Manager.Runtime.Worker.html#start_link/1"},{"type":"opaque","title":"Manager.Runtime.Worker.state/0","doc":"","ref":"Manager.Runtime.Worker.html#t:state/0"},{"type":"function","title":"Manager.Runtime.Worker.strategies/0","doc":"","ref":"Manager.Runtime.Worker.html#strategies/0"},{"type":"function","title":"Manager.Runtime.Worker.syndicates/0","doc":"","ref":"Manager.Runtime.Worker.html#syndicates/0"},{"type":"module","title":"Manager.Saga","doc":"Orchestration based Sagas for complex use cases. Since the AuctionHouse is mostly asynchronous, this means some\noperations are separated by time. In order to have the asynchronous behaviour and logic in one coherent place I am\nusing the Saga patter as described by Peter Ullrich: https://peterullrich.com/saga-pattern-in-elixir\n\nI implement each Saga using a Genserver which is spawned by a dynamic supervisor. This way I keep both runtime and\nimplementation details together in one coherent place.","ref":"Manager.Saga.html"},{"type":"module","title":"Manager.Saga.Activate","doc":"Creates a process that will be responsible for the entire activation flow.","ref":"Manager.Saga.Activate.html"},{"type":"function","title":"Manager.Saga.Activate.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Saga.Activate.html#child_spec/1"},{"type":"type","title":"Manager.Saga.Activate.price/0","doc":"","ref":"Manager.Saga.Activate.html#t:price/0"},{"type":"function","title":"Manager.Saga.Activate.start_link/1","doc":"","ref":"Manager.Saga.Activate.html#start_link/1"},{"type":"module","title":"Manager.Saga.Deactivate","doc":"Creates a process that will be responsible for the entire deactivation flow.","ref":"Manager.Saga.Deactivate.html"},{"type":"function","title":"Manager.Saga.Deactivate.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Saga.Deactivate.html#child_spec/1"},{"type":"function","title":"Manager.Saga.Deactivate.start_link/1","doc":"","ref":"Manager.Saga.Deactivate.html#start_link/1"},{"type":"module","title":"Manager.Saga.Login","doc":"Creates a process that will be responsible for the entire login flow.","ref":"Manager.Saga.Login.html"},{"type":"function","title":"Manager.Saga.Login.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Saga.Login.html#child_spec/1"},{"type":"function","title":"Manager.Saga.Login.start_link/1","doc":"","ref":"Manager.Saga.Login.html#start_link/1"},{"type":"module","title":"Manager.Type","doc":"Holds the types for the Manager library.","ref":"Manager.Type.html"},{"type":"type","title":"Manager.Type.activate_response/0","doc":"","ref":"Manager.Type.html#t:activate_response/0"},{"type":"type","title":"Manager.Type.active_syndicates_response/0","doc":"","ref":"Manager.Type.html#t:active_syndicates_response/0"},{"type":"type","title":"Manager.Type.deactivate_response/0","doc":"","ref":"Manager.Type.html#t:deactivate_response/0"},{"type":"type","title":"Manager.Type.dependencies/0","doc":"","ref":"Manager.Type.html#t:dependencies/0"},{"type":"type","title":"Manager.Type.handle/0","doc":"","ref":"Manager.Type.html#t:handle/0"},{"type":"type","title":"Manager.Type.item_id/0","doc":"","ref":"Manager.Type.html#t:item_id/0"},{"type":"type","title":"Manager.Type.login_response/0","doc":"","ref":"Manager.Type.html#t:login_response/0"},{"type":"type","title":"Manager.Type.logout_response/0","doc":"","ref":"Manager.Type.html#t:logout_response/0"},{"type":"type","title":"Manager.Type.recover_login_response/0","doc":"","ref":"Manager.Type.html#t:recover_login_response/0"},{"type":"type","title":"Manager.Type.strategies_response/0","doc":"","ref":"Manager.Type.html#t:strategies_response/0"},{"type":"type","title":"Manager.Type.syndicates_response/0","doc":"","ref":"Manager.Type.html#t:syndicates_response/0"},{"type":"behaviour","title":"RateLimiter","doc":"Interface for a rate limiter. Based from:\nhttps://akoutmos.com/post/rate-limiting-with-genservers/","ref":"RateLimiter.html"},{"type":"function","title":"RateLimiter.calculate_refresh_rate/1","doc":"Calculates the refresh rate, to determine how many requests per second the limiter can made.","ref":"RateLimiter.html#calculate_refresh_rate/1"},{"type":"function","title":"RateLimiter.get_rate_limiter/0","doc":"Gets the limiter from the configs at compile time.","ref":"RateLimiter.html#get_rate_limiter/0"},{"type":"function","title":"RateLimiter.get_requests_per_second/0","doc":"Gets the requests per second from the configs at compile time.","ref":"RateLimiter.html#get_requests_per_second/0"},{"type":"function","title":"RateLimiter.make_request/2","doc":"Default implementation for the make_request function of this behaviour. Fetches the limiter of choice from configs.","ref":"RateLimiter.html#make_request/2"},{"type":"callback","title":"RateLimiter.make_request/2","doc":"","ref":"RateLimiter.html#c:make_request/2"},{"type":"type","title":"RateLimiter.metadata/0","doc":"","ref":"RateLimiter.html#t:metadata/0"},{"type":"type","title":"RateLimiter.request_arguments/0","doc":"","ref":"RateLimiter.html#t:request_arguments/0"},{"type":"type","title":"RateLimiter.request_handler/0","doc":"","ref":"RateLimiter.html#t:request_handler/0"},{"type":"type","title":"RateLimiter.response/0","doc":"","ref":"RateLimiter.html#t:response/0"},{"type":"type","title":"RateLimiter.response_function/0","doc":"","ref":"RateLimiter.html#t:response_function/0"},{"type":"type","title":"RateLimiter.response_handler/0","doc":"","ref":"RateLimiter.html#t:response_handler/0"},{"type":"module","title":"RateLimiter.LeakyBucket","doc":"A leaky bucket rate limiter is one where the input into it may be variable and can fluctuate, but the output will be\nat a consistent rate and within the configured limits:\nhttps://akoutmos.com/post/rate-limiting-with-genservers/\n\nThe application using this Limiter, must itself launch the Task.Supervisor that is used:application\n\n```\nchildren = [\n  {Task.Supervisor, name: RateLimiter.TaskSupervisor}\n]\n\nSupervisor.init(children, strategy: :one_for_one)\n```","ref":"RateLimiter.LeakyBucket.html"},{"type":"function","title":"RateLimiter.LeakyBucket.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"RateLimiter.LeakyBucket.html#child_spec/1"},{"type":"function","title":"RateLimiter.LeakyBucket.start_link/1","doc":"","ref":"RateLimiter.LeakyBucket.html#start_link/1"},{"type":"module","title":"Shared","doc":"Holds general utility functions used across all the project, as well as the\nDataStructures and Types used to represent the Domain.","ref":"Shared.html"},{"type":"module","title":"Shared.Data.Authorization","doc":"Saves authorization details for a user.","ref":"Shared.Data.Authorization.html"},{"type":"type","title":"Shared.Data.Authorization.authorization/0","doc":"","ref":"Shared.Data.Authorization.html#t:authorization/0"},{"type":"type","title":"Shared.Data.Authorization.cookie/0","doc":"","ref":"Shared.Data.Authorization.html#t:cookie/0"},{"type":"function","title":"Shared.Data.Authorization.new/1","doc":"","ref":"Shared.Data.Authorization.html#new/1"},{"type":"type","title":"Shared.Data.Authorization.t/0","doc":"Authorization information for a user","ref":"Shared.Data.Authorization.html#t:t/0"},{"type":"type","title":"Shared.Data.Authorization.token/0","doc":"","ref":"Shared.Data.Authorization.html#t:token/0"},{"type":"module","title":"Shared.Data.Credentials","doc":"Represents the credentials of an user. Credentials are used to get access\nto Authorization and User info, which is the used to makes requests to the\nmarket.","ref":"Shared.Data.Credentials.html"},{"type":"type","title":"Shared.Data.Credentials.email/0","doc":"","ref":"Shared.Data.Credentials.html#t:email/0"},{"type":"function","title":"Shared.Data.Credentials.new/2","doc":"","ref":"Shared.Data.Credentials.html#new/2"},{"type":"type","title":"Shared.Data.Credentials.password/0","doc":"","ref":"Shared.Data.Credentials.html#t:password/0"},{"type":"type","title":"Shared.Data.Credentials.t/0","doc":"The credentials","ref":"Shared.Data.Credentials.html#t:t/0"},{"type":"module","title":"Shared.Data.Order","doc":"Represents an order to be made to warframe market. There are two types of\norders thus far, RankedOrders and SimpleOrders. See respective files for more\ninformation.","ref":"Shared.Data.Order.html"},{"type":"function","title":"Shared.Data.Order.new/1","doc":"","ref":"Shared.Data.Order.html#new/1"},{"type":"type","title":"Shared.Data.Order.order/0","doc":"","ref":"Shared.Data.Order.html#t:order/0"},{"type":"type","title":"Shared.Data.Order.t/0","doc":"","ref":"Shared.Data.Order.html#t:t/0"},{"type":"module","title":"Shared.Data.Order.RankedOrder","doc":"Represents an order to be made to warframe market with a rank.","ref":"Shared.Data.Order.RankedOrder.html"},{"type":"type","title":"Shared.Data.Order.RankedOrder.item_id/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:item_id/0"},{"type":"type","title":"Shared.Data.Order.RankedOrder.mod_rank/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:mod_rank/0"},{"type":"function","title":"Shared.Data.Order.RankedOrder.new/1","doc":"","ref":"Shared.Data.Order.RankedOrder.html#new/1"},{"type":"type","title":"Shared.Data.Order.RankedOrder.order_type/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:order_type/0"},{"type":"type","title":"Shared.Data.Order.RankedOrder.platinum/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:platinum/0"},{"type":"type","title":"Shared.Data.Order.RankedOrder.quantity/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:quantity/0"},{"type":"type","title":"Shared.Data.Order.RankedOrder.ranked_order/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:ranked_order/0"},{"type":"type","title":"Shared.Data.Order.RankedOrder.t/0","doc":"An order.","ref":"Shared.Data.Order.RankedOrder.html#t:t/0"},{"type":"module","title":"Shared.Data.Order.SimpleOrder","doc":"Represents an order to be made to warframe market without a rank.","ref":"Shared.Data.Order.SimpleOrder.html"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.item_id/0","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#t:item_id/0"},{"type":"function","title":"Shared.Data.Order.SimpleOrder.new/1","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#new/1"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.order_type/0","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#t:order_type/0"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.platinum/0","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#t:platinum/0"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.quantity/0","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#t:quantity/0"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.simple_order/0","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#t:simple_order/0"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.t/0","doc":"An order.","ref":"Shared.Data.Order.SimpleOrder.html#t:t/0"},{"type":"module","title":"Shared.Data.OrderInfo","doc":"Represents information about current orders from warframe market.\nHere is the structure of a typical order in JSON:\n\n```json\n{\n    \"creation_date\": \"2017-09-19T02:01:29.000+00:00\",\n    \"visible\": true,\n    \"quantity\": 1,\n    \"user\": {\n        \"reputation\": 1977,\n        \"locale\": \"en\",\n        \"avatar\": \"user/avatar/5678a156cbfa8f02c9b814c3.png?0d832d1017240078ecf4bdeb0d08a101\",\n        \"ingame_name\": \"fl4m3\",\n        \"last_seen\": \"2025-01-13T04:21:53.899+00:00\",\n        \"crossplay\": false,\n        \"platform\": \"pc\",\n        \"id\": \"5678a156cbfa8f02c9b814c3\",\n        \"region\": \"en\",\n        \"status\": \"online\"\n    },\n    \"last_update\": \"2019-11-24T01:58:58.000+00:00\",\n    \"platinum\": 18,\n    \"order_type\": \"sell\",\n    \"id\": \"59c07a790f31396e83ed709b\",\n    \"mod_rank\": 0,\n    \"region\": \"en\"\n}\n```\n\nWhere the user is defined by OrderInfo.User.","ref":"Shared.Data.OrderInfo.html"},{"type":"function","title":"Shared.Data.OrderInfo.new/1","doc":"","ref":"Shared.Data.OrderInfo.html#new/1"},{"type":"type","title":"Shared.Data.OrderInfo.order_info/0","doc":"","ref":"Shared.Data.OrderInfo.html#t:order_info/0"},{"type":"type","title":"Shared.Data.OrderInfo.order_type/0","doc":"","ref":"Shared.Data.OrderInfo.html#t:order_type/0"},{"type":"type","title":"Shared.Data.OrderInfo.platinum/0","doc":"","ref":"Shared.Data.OrderInfo.html#t:platinum/0"},{"type":"type","title":"Shared.Data.OrderInfo.t/0","doc":"Information about an order","ref":"Shared.Data.OrderInfo.html#t:t/0"},{"type":"type","title":"Shared.Data.OrderInfo.user/0","doc":"","ref":"Shared.Data.OrderInfo.html#t:user/0"},{"type":"type","title":"Shared.Data.OrderInfo.visible/0","doc":"","ref":"Shared.Data.OrderInfo.html#t:visible/0"},{"type":"module","title":"Shared.Data.OrderInfo.User","doc":"Represents the account information for a warframe.market User who has an order\nposted. The current format is the following:\n\n```json\n\"user\": {\n    \"reputation\": 1977,\n    \"locale\": \"en\",\n    \"avatar\": \"user/avatar/5678a156cbfa8f02c9b814c3.png?0d832d1017240078ecf4bdeb0d08a101\",\n    \"ingame_name\": \"fl4m3\",\n    \"last_seen\": \"2025-01-13T04:21:53.899+00:00\",\n    \"crossplay\": false,\n    \"platform\": \"pc\",\n    \"id\": \"5678a156cbfa8f02c9b814c3\",\n    \"region\": \"en\",\n    \"status\": \"online\"\n}\n```\n\nWe only take some of the information, no all.\nPC Players with crossplay active can trade with any platform (except Nintendo switch).\nhttps://www.warframe.com/crossprogression","ref":"Shared.Data.OrderInfo.User.html"},{"type":"type","title":"Shared.Data.OrderInfo.User.crossplay/0","doc":"","ref":"Shared.Data.OrderInfo.User.html#t:crossplay/0"},{"type":"type","title":"Shared.Data.OrderInfo.User.ingame_name/0","doc":"","ref":"Shared.Data.OrderInfo.User.html#t:ingame_name/0"},{"type":"function","title":"Shared.Data.OrderInfo.User.new/1","doc":"","ref":"Shared.Data.OrderInfo.User.html#new/1"},{"type":"type","title":"Shared.Data.OrderInfo.User.platform/0","doc":"","ref":"Shared.Data.OrderInfo.User.html#t:platform/0"},{"type":"type","title":"Shared.Data.OrderInfo.User.status/0","doc":"","ref":"Shared.Data.OrderInfo.User.html#t:status/0"},{"type":"type","title":"Shared.Data.OrderInfo.User.t/0","doc":"Account information of an User","ref":"Shared.Data.OrderInfo.User.html#t:t/0"},{"type":"type","title":"Shared.Data.OrderInfo.User.user/0","doc":"","ref":"Shared.Data.OrderInfo.User.html#t:user/0"},{"type":"module","title":"Shared.Data.PlacedOrder","doc":"Represents an order that was placed by the User of this application. I could\nhave used OrderInfo as well, but since the later one has a ton of information\nI don't really need/want to deal with, I opted for this instead.","ref":"Shared.Data.PlacedOrder.html"},{"type":"type","title":"Shared.Data.PlacedOrder.item_id/0","doc":"","ref":"Shared.Data.PlacedOrder.html#t:item_id/0"},{"type":"function","title":"Shared.Data.PlacedOrder.new/1","doc":"","ref":"Shared.Data.PlacedOrder.html#new/1"},{"type":"type","title":"Shared.Data.PlacedOrder.order_id/0","doc":"","ref":"Shared.Data.PlacedOrder.html#t:order_id/0"},{"type":"type","title":"Shared.Data.PlacedOrder.placed_order/0","doc":"","ref":"Shared.Data.PlacedOrder.html#t:placed_order/0"},{"type":"type","title":"Shared.Data.PlacedOrder.t/0","doc":"A PlacedOrder","ref":"Shared.Data.PlacedOrder.html#t:t/0"},{"type":"module","title":"Shared.Data.Product","doc":"A Product is an item we can create a sell order for. Currently we only\nsupport mods. Products contain warframe.market information about the item, as\nwell as default parameters to create sell orders.","ref":"Shared.Data.Product.html"},{"type":"type","title":"Shared.Data.Product.default_price/0","doc":"","ref":"Shared.Data.Product.html#t:default_price/0"},{"type":"type","title":"Shared.Data.Product.id/0","doc":"","ref":"Shared.Data.Product.html#t:id/0"},{"type":"type","title":"Shared.Data.Product.min_price/0","doc":"","ref":"Shared.Data.Product.html#t:min_price/0"},{"type":"type","title":"Shared.Data.Product.name/0","doc":"","ref":"Shared.Data.Product.html#t:name/0"},{"type":"function","title":"Shared.Data.Product.new/1","doc":"","ref":"Shared.Data.Product.html#new/1"},{"type":"type","title":"Shared.Data.Product.product/0","doc":"","ref":"Shared.Data.Product.html#t:product/0"},{"type":"type","title":"Shared.Data.Product.quantity/0","doc":"","ref":"Shared.Data.Product.html#t:quantity/0"},{"type":"type","title":"Shared.Data.Product.rank/0","doc":"","ref":"Shared.Data.Product.html#t:rank/0"},{"type":"type","title":"Shared.Data.Product.t/0","doc":"Product details","ref":"Shared.Data.Product.html#t:t/0"},{"type":"module","title":"Shared.Data.Strategy","doc":"A strategy for selling a product.","ref":"Shared.Data.Strategy.html"},{"type":"type","title":"Shared.Data.Strategy.description/0","doc":"","ref":"Shared.Data.Strategy.html#t:description/0"},{"type":"type","title":"Shared.Data.Strategy.id/0","doc":"","ref":"Shared.Data.Strategy.html#t:id/0"},{"type":"type","title":"Shared.Data.Strategy.name/0","doc":"","ref":"Shared.Data.Strategy.html#t:name/0"},{"type":"function","title":"Shared.Data.Strategy.new/1","doc":"","ref":"Shared.Data.Strategy.html#new/1"},{"type":"type","title":"Shared.Data.Strategy.strategy/0","doc":"","ref":"Shared.Data.Strategy.html#t:strategy/0"},{"type":"type","title":"Shared.Data.Strategy.t/0","doc":"Strategy details","ref":"Shared.Data.Strategy.html#t:t/0"},{"type":"module","title":"Shared.Data.Syndicate","doc":"A syndicate is a party with tradable items.","ref":"Shared.Data.Syndicate.html"},{"type":"type","title":"Shared.Data.Syndicate.catalog/0","doc":"","ref":"Shared.Data.Syndicate.html#t:catalog/0"},{"type":"type","title":"Shared.Data.Syndicate.id/0","doc":"","ref":"Shared.Data.Syndicate.html#t:id/0"},{"type":"type","title":"Shared.Data.Syndicate.name/0","doc":"","ref":"Shared.Data.Syndicate.html#t:name/0"},{"type":"function","title":"Shared.Data.Syndicate.new/1","doc":"","ref":"Shared.Data.Syndicate.html#new/1"},{"type":"type","title":"Shared.Data.Syndicate.syndicate/0","doc":"","ref":"Shared.Data.Syndicate.html#t:syndicate/0"},{"type":"type","title":"Shared.Data.Syndicate.t/0","doc":"Syndicate details","ref":"Shared.Data.Syndicate.html#t:t/0"},{"type":"module","title":"Shared.Data.User","doc":"Represents relevant User information for clients using this AuctionHouse.","ref":"Shared.Data.User.html"},{"type":"type","title":"Shared.Data.User.ingame_name/0","doc":"","ref":"Shared.Data.User.html#t:ingame_name/0"},{"type":"function","title":"Shared.Data.User.new/1","doc":"","ref":"Shared.Data.User.html#new/1"},{"type":"type","title":"Shared.Data.User.patreon?/0","doc":"","ref":"Shared.Data.User.html#t:patreon?/0"},{"type":"type","title":"Shared.Data.User.t/0","doc":"User information","ref":"Shared.Data.User.html#t:t/0"},{"type":"type","title":"Shared.Data.User.user/0","doc":"","ref":"Shared.Data.User.html#t:user/0"},{"type":"module","title":"Shared.Utils.ExtraGuards","doc":"Contains additional guards to use in functions.","ref":"Shared.Utils.ExtraGuards.html"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_non_neg_integer/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_non_neg_integer/1"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_non_neg_number/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_non_neg_number/1"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_pos_integer/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_pos_integer/1"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_pos_number/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_pos_number/1"},{"type":"module","title":"Shared.Utils.Maps","doc":"Set of utility functions used across the app to help with Map operations.","ref":"Shared.Utils.Maps.html"},{"type":"function","title":"Shared.Utils.Maps.to_atom_map/2","doc":"Converts a string map to an atom map. Only goes 1 level deep and is not recursive.\nConverting the values only works for String type values.","ref":"Shared.Utils.Maps.html#to_atom_map/2"},{"type":"function","title":"Shared.Utils.Maps.to_string_map/1","doc":"Converts an atom map to a string map. Only goes 1 level deep and is not\nrecursive.","ref":"Shared.Utils.Maps.html#to_string_map/1"},{"type":"module","title":"Shared.Utils.Structs","doc":"Set of utility functions used across the app to help with Struct operations.","ref":"Shared.Utils.Structs.html"},{"type":"function","title":"Shared.Utils.Structs.data_to_struct/2","doc":"Converts the given enumerable into teh given struct.","ref":"Shared.Utils.Structs.html#data_to_struct/2"},{"type":"function","title":"Shared.Utils.Structs.string_map_to_struct/2","doc":"Converts given string map into the given struct.","ref":"Shared.Utils.Structs.html#string_map_to_struct/2"},{"type":"module","title":"Shared.Utils.Tuples","doc":"Set of utility functions used across the app to help with Tuple operations.","ref":"Shared.Utils.Tuples.html"},{"type":"function","title":"Shared.Utils.Tuples.from_tagged_tuple/1","doc":"Retrieves the data from a given OK tagged tuple.","ref":"Shared.Utils.Tuples.html#from_tagged_tuple/1"},{"type":"function","title":"Shared.Utils.Tuples.ok?/1","doc":"Returns whether or not a tagged tuple is of type OK.","ref":"Shared.Utils.Tuples.html#ok?/1"},{"type":"function","title":"Shared.Utils.Tuples.to_tagged_tuple/1","doc":"Places the given data into an OK tagged tuple.","ref":"Shared.Utils.Tuples.html#to_tagged_tuple/1"},{"type":"module","title":"Store","doc":"Port for the persistency layer.\nThis module contains the Public API for the storage app.","ref":"Store.html"},{"type":"function","title":"Store.activate_syndicates/1","doc":"Marks the given syndicates as activated with the given strategy.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> Store.activate_syndicates(%{red_veil: :top_five_average, new_loka: :top_five_average})\n:ok\n\n> Store.activate_syndicates(%{red_veil: :top_five_average, new_loka: :top_five_average})\n{:error, :enoent}\n```","ref":"Store.html#activate_syndicates/1"},{"type":"function","title":"Store.deactivate_syndicates/1","doc":"Removes the syndicates with the given ids from the set of active syndicates.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> Store.deactivate_syndicates([:red_veil, :new_loka])\n:ok\n\n> Store.deactivate_syndicates([:red_veil, :new_loka])\n{:error, :enoent}\n```","ref":"Store.html#deactivate_syndicates/1"},{"type":"function","title":"Store.delete_login_data/0","doc":"Deletes any login information from the storage system.\n\nExample:\n```\n> Store.delete_login_data()\n:ok\n\n> Store.delete_login_data()\n{:error, :enoent}\n```","ref":"Store.html#delete_login_data/0"},{"type":"function","title":"Store.get_login_data/0","doc":"Retrieves the user's login data from Storage.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n\n> Store.get_login_data()\n{:ok, {\n  %Authorization{token: \"a_token\", cookie: \"a_cookie\"},\n  %User{ingame_name: \"username\", patreon?: false}\n}}\n\n> Store.get_login_data()\n{:error, :enoent}\n```","ref":"Store.html#get_login_data/0"},{"type":"function","title":"Store.get_product_by_id/1","doc":"Returns the product with the given id.\n\nExample:\n```\n> alias Shared.Data.{Product}\n\n> Store.get_product_by_id(\"8ee5b3b0-fa43-4dbc-9363-a52930dc742e\")\n{:ok,\n  %Product{\n    name: \"Eternal War\",\n    id: \"8ee5b3b0-fa43-4dbc-9363-a52930dc742e\",\n    min_price: 14,\n    default_price: 15,\n    quantity: 1,\n    rank: 0\n  }\n}\n\n> Store.get_product_by_id(\"non-existent-id\")\n{:error, :product_not_found}\n\n> Store.get_product_by_id(\"8ee5b3b0-fa43-4dbc-9363-a52930dc742e\")\n{:error, :enoent}\n```","ref":"Store.html#get_product_by_id/1"},{"type":"function","title":"Store.list_active_syndicates/0","doc":"Returns the syndicates currently active. An active syndicate is a syndicate with orders in `current_orders`.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> Store.list_active_syndicates()\n{:ok, %{red_veil: :top_five_average, new_loka: :top_five_average}}\n\n> Store.list_active_syndicates()\n{:error, :enoent}\n```","ref":"Store.html#list_active_syndicates/0"},{"type":"function","title":"Store.list_products/1","doc":"Lists the products for the syndicates with the given ids.\n\nExample:\n```\n> alias Shared.Data.Product\n\n> Store.list_products([:red_veil])\n{:ok, [\n  %Product{\n    name: \"Eternal War\",\n    id: \"8ee5b3b0-fa43-4dbc-9363-a52930dc742e\",\n    min_price: 14,\n    default_price: 15,\n    quantity: 1,\n    rank: 0\n  },\n  ...\n]}\n\n> Store.list_products([:invalid_syndicate_id])\n{:error, {:syndicate_not_found, [:invalid_syndicate_id]}}\n```","ref":"Store.html#list_products/1"},{"type":"function","title":"Store.list_syndicates/0","doc":"Returns all the syndicates currently stored. The fact a syndicate is stored does not mean it has products, nor orders.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> Store.list_syndicates()\n{:ok, [%Syndicate{name: \"Red Veil\", id: :red_veil, catalog: []}, %Syndicate{name: \"New Loka\", id: :new_loka, catalog: []}]}\n\n> Store.list_syndicates()\n{:error, :enoent}\n```","ref":"Store.html#list_syndicates/0"},{"type":"function","title":"Store.save_login_data/2","doc":"Saves the login information from the user into the storage system.\nDoes not perform validation.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n\n> Store.save_login_data(\n  %Authorization{token: \"a_token\", cookie: \"a_cookie\"},\n  %User{ingame_name: \"username\", patreon?: false}\n)\n:ok\n\n> Store.save_login_data(\n  %Authorization{token: \"a_token\", cookie: \"a_cookie\"},\n  %User{ingame_name: \"username\", patreon?: false}\n)\n{:error, :enoent}\n```","ref":"Store.html#save_login_data/2"},{"type":"module","title":"Store.FileSystem","doc":"Adapter for the Store port, implements it using the file system.","ref":"Store.FileSystem.html"},{"type":"function","title":"Store.FileSystem.activate_syndicates/2","doc":"","ref":"Store.FileSystem.html#activate_syndicates/2"},{"type":"function","title":"Store.FileSystem.deactivate_syndicates/2","doc":"","ref":"Store.FileSystem.html#deactivate_syndicates/2"},{"type":"function","title":"Store.FileSystem.delete_login_data/1","doc":"","ref":"Store.FileSystem.html#delete_login_data/1"},{"type":"function","title":"Store.FileSystem.get_login_data/1","doc":"","ref":"Store.FileSystem.html#get_login_data/1"},{"type":"function","title":"Store.FileSystem.get_product_by_id/2","doc":"","ref":"Store.FileSystem.html#get_product_by_id/2"},{"type":"function","title":"Store.FileSystem.list_active_syndicates/1","doc":"","ref":"Store.FileSystem.html#list_active_syndicates/1"},{"type":"function","title":"Store.FileSystem.list_products/2","doc":"","ref":"Store.FileSystem.html#list_products/2"},{"type":"function","title":"Store.FileSystem.list_syndicates/1","doc":"","ref":"Store.FileSystem.html#list_syndicates/1"},{"type":"function","title":"Store.FileSystem.save_login_data/3","doc":"","ref":"Store.FileSystem.html#save_login_data/3"},{"type":"module","title":"Store.Type","doc":"Contains the types for the Store library.\nBecause we separate this file from the API and implementation, we also avoid\na cyclical dependency between them.","ref":"Store.Type.html"},{"type":"type","title":"Store.Type.activate_syndicates_response/0","doc":"","ref":"Store.Type.html#t:activate_syndicates_response/0"},{"type":"type","title":"Store.Type.deactivate_syndicates_response/0","doc":"","ref":"Store.Type.html#t:deactivate_syndicates_response/0"},{"type":"type","title":"Store.Type.delete_login_data_response/0","doc":"","ref":"Store.Type.html#t:delete_login_data_response/0"},{"type":"type","title":"Store.Type.dependencies/0","doc":"","ref":"Store.Type.html#t:dependencies/0"},{"type":"type","title":"Store.Type.get_login_data_response/0","doc":"","ref":"Store.Type.html#t:get_login_data_response/0"},{"type":"type","title":"Store.Type.get_product_by_id_response/0","doc":"","ref":"Store.Type.html#t:get_product_by_id_response/0"},{"type":"type","title":"Store.Type.list_active_syndicates_response/0","doc":"","ref":"Store.Type.html#t:list_active_syndicates_response/0"},{"type":"type","title":"Store.Type.list_products_response/0","doc":"","ref":"Store.Type.html#t:list_products_response/0"},{"type":"type","title":"Store.Type.list_syndicates_response/0","doc":"","ref":"Store.Type.html#t:list_syndicates_response/0"},{"type":"type","title":"Store.Type.save_login_data_response/0","doc":"","ref":"Store.Type.html#t:save_login_data_response/0"},{"type":"module","title":"WebInterface","doc":"The entrypoint for defining your web interface, such\nas controllers, components, channels, and so on.\n\nThis can be used in your application as:\n\n    use WebInterface, :controller\n    use WebInterface, :html\n\nThe definitions below will be executed for every controller,\ncomponent, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define additional modules and import\nthose modules here.","ref":"WebInterface.html"},{"type":"macro","title":"WebInterface.__using__/1","doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"WebInterface.html#__using__/1"},{"type":"function","title":"WebInterface.channel/0","doc":"","ref":"WebInterface.html#channel/0"},{"type":"function","title":"WebInterface.controller/0","doc":"","ref":"WebInterface.html#controller/0"},{"type":"function","title":"WebInterface.html/0","doc":"","ref":"WebInterface.html#html/0"},{"type":"function","title":"WebInterface.live_component/0","doc":"","ref":"WebInterface.html#live_component/0"},{"type":"function","title":"WebInterface.live_view/0","doc":"","ref":"WebInterface.html#live_view/0"},{"type":"function","title":"WebInterface.router/0","doc":"","ref":"WebInterface.html#router/0"},{"type":"function","title":"WebInterface.static_paths/0","doc":"","ref":"WebInterface.html#static_paths/0"},{"type":"function","title":"WebInterface.verified_routes/0","doc":"","ref":"WebInterface.html#verified_routes/0"},{"type":"module","title":"WebInterface.ActivateLive","doc":"","ref":"WebInterface.ActivateLive.html"},{"type":"function","title":"WebInterface.ActivateLive.disable_button?/3","doc":"","ref":"WebInterface.ActivateLive.html#disable_button?/3"},{"type":"function","title":"WebInterface.ActivateLive.render/1","doc":"Callback implementation for  Phoenix.LiveView.render/1 .","ref":"WebInterface.ActivateLive.html#render/1"},{"type":"module","title":"WebInterface.Components.OperationProgress","doc":"LiveView subcomponent for the Operation Progress Page. It hides both sidebar and main\nsubcomponents and displays information about operations taking place.\n\nSends messages back to the `windows` component.","ref":"WebInterface.Components.OperationProgress.html"},{"type":"function","title":"WebInterface.Components.OperationProgress.render/1","doc":"Callback implementation for  Phoenix.LiveComponent.render/1 .","ref":"WebInterface.Components.OperationProgress.html#render/1"},{"type":"module","title":"WebInterface.CoreComponents","doc":"Provides core UI components.\n\nAt the first glance, this module may seem daunting, but its goal is\nto provide some core building blocks in your application, such modals,\ntables, and forms. The components are mostly markup and well documented\nwith doc strings and declarative assigns. You may customize and style\nthem in any way you want, based on your application growth and needs.\n\nThe default components use Tailwind CSS, a utility-first CSS framework.\nSee the [Tailwind CSS documentation](https://tailwindcss.com) to learn\nhow to customize them or feel free to swap in another framework altogether.\n\nIcons are provided by [heroicons](https://heroicons.com). See `icon/1` for usage.","ref":"WebInterface.CoreComponents.html"},{"type":"function","title":"WebInterface.CoreComponents.back/1","doc":"Renders a back navigation link.","ref":"WebInterface.CoreComponents.html#back/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.back/1","doc":"<.back navigate={~p\"/posts\"}>Back to posts</.back>","ref":"WebInterface.CoreComponents.html#back/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.back/1","doc":"* `navigate` (`:any`) (required)","ref":"WebInterface.CoreComponents.html#back/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.back/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#back/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.button/1","doc":"Renders a button.","ref":"WebInterface.CoreComponents.html#button/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.button/1","doc":"<.button>Send!</.button>\n    <.button phx-click=\"go\" class=\"ml-2\" disabled=false>Send!</.button>","ref":"WebInterface.CoreComponents.html#button/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.button/1","doc":"* `type` (`:string`) - Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* `disabled` (`:boolean`) - Defaults to `false`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#button/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.button/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#button/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.checkgroup/1","doc":"Generate a checkbox group for multi-select.","ref":"WebInterface.CoreComponents.html#checkgroup/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.checkgroup/1","doc":"<.checkgroup\n    field={@form[:genres]}\n    options={[{\"Fantasy\", \"fantasy\"}, {\"Science Fiction\", \"sci-fi\"}]}\n    selected={[{\"Fantasy\", \"fantasy\"}]}\n  />","ref":"WebInterface.CoreComponents.html#checkgroup/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.checkgroup/1","doc":"* `name` (`:any`)\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:genres].\n* `required` (`:boolean`) - Defaults to `false`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2. Defaults to `[]`.\n* `disabled` (`:list`) - the list of options that are disabled. Defaults to `[]`.\n* `selected` (`:list`) - the currently selected options, to know which boxes are checked. Defaults to `[]`.","ref":"WebInterface.CoreComponents.html#checkgroup/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.description/1","doc":"Renders a description paragraph.","ref":"WebInterface.CoreComponents.html#description/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.description/1","doc":"<.description class=\"additional-class\"> Some description here! </.description>","ref":"WebInterface.CoreComponents.html#description/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.description/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#description/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.description/1","doc":"* `inner_block` (required) - the text representing a description.","ref":"WebInterface.CoreComponents.html#description/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.error/1","doc":"Generates a generic error message.","ref":"WebInterface.CoreComponents.html#error/1"},{"type":"function","title":"Slots - WebInterface.CoreComponents.error/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#error/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.flash/1","doc":"Renders flash notices.","ref":"WebInterface.CoreComponents.html#flash/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.flash/1","doc":"<.flash kind={:info} flash={@flash} />\n    <.flash kind={:info} phx-mounted={show(\"#flash\")}>Welcome Back!</.flash>","ref":"WebInterface.CoreComponents.html#flash/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.flash/1","doc":"* `id` (`:string`) - the optional id of flash container. Defaults to `\"flash\"`.\n* `flash` (`:map`) - the map of flash messages to display. Defaults to `%{}`.\n* `title` (`:string`) - Defaults to `nil`.\n* `kind` (`:atom`) - used for styling and flash lookup.Must be one of `:info`, or `:error`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#flash/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.flash/1","doc":"* `inner_block` - the optional inner block that renders the flash message.","ref":"WebInterface.CoreComponents.html#flash/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.flash_group/1","doc":"Shows the flash group with standard titles and content.","ref":"WebInterface.CoreComponents.html#flash_group/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.flash_group/1","doc":"<.flash_group flash={@flash} />","ref":"WebInterface.CoreComponents.html#flash_group/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.flash_group/1","doc":"* `flash` (`:map`) (required) - the map of flash messages.","ref":"WebInterface.CoreComponents.html#flash_group/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.header/1","doc":"Renders a header with title.","ref":"WebInterface.CoreComponents.html#header/1"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.header/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#header/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.header/1","doc":"* `inner_block` (required)\n* `subtitle`\n* `actions`","ref":"WebInterface.CoreComponents.html#header/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.hide/2","doc":"","ref":"WebInterface.CoreComponents.html#hide/2"},{"type":"function","title":"WebInterface.CoreComponents.hide_dropdown/1","doc":"","ref":"WebInterface.CoreComponents.html#hide_dropdown/1"},{"type":"function","title":"WebInterface.CoreComponents.hide_modal/2","doc":"","ref":"WebInterface.CoreComponents.html#hide_modal/2"},{"type":"function","title":"WebInterface.CoreComponents.icon/1","doc":"Renders a [Hero Icon](https://heroicons.com).\n\nHero icons come in three styles – outline, solid, and mini.\nBy default, the outline style is used, but solid an mini may\nbe applied by using the `-solid` and `-mini` suffix.\n\nYou can customize the size and colors of the icons by setting\nwidth, height, and background color classes.\n\nIcons are extracted from your `assets/vendor/heroicons` directory and bundled\nwithin your compiled app.css by the plugin in your `assets/tailwind.config.js`.","ref":"WebInterface.CoreComponents.html#icon/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.icon/1","doc":"<.icon name=\"hero-x-mark-solid\" />\n    <.icon name=\"hero-arrow-path\" class=\"ml-1 w-3 h-3 animate-spin\" />","ref":"WebInterface.CoreComponents.html#icon/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.icon/1","doc":"* `name` (`:string`) (required)\n* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#icon/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.input/1","doc":"Renders an input with label and error messages.\n\nA `%Phoenix.HTML.Form{}` and field name may be passed to the input\nto build input names and error messages, or all the attributes and\nerrors may be passed explicitly.","ref":"WebInterface.CoreComponents.html#input/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.input/1","doc":"<.input field={@form[:email]} type=\"email\" />\n    <.input name=\"my-input\" errors={[\"oh no!\"]} />","ref":"WebInterface.CoreComponents.html#input/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.input/1","doc":"* `id` (`:any`) - Defaults to `nil`.\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `value` (`:any`)\n* `type` (`:string`) - Defaults to `\"text\"`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:email].\n* `errors` (`:list`) - Defaults to `[]`.\n* `checked` (`:boolean`) - the checked flag for checkbox inputs.\n* `prompt` (`:string`) - the prompt for select inputs. Defaults to `nil`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `multiple` (`:boolean`) - the multiple flag for select inputs. Defaults to `false`.\n* `selected` (`:any`) - the currently selected option, to know which input(s) is/are currently selected. Defaults to `[]`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#input/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.input/1","doc":"* `inner_block`","ref":"WebInterface.CoreComponents.html#input/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.label/1","doc":"Renders a label.","ref":"WebInterface.CoreComponents.html#label/1"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.label/1","doc":"* `for` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#label/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.label/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#label/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.list/1","doc":"Renders a data list.","ref":"WebInterface.CoreComponents.html#list/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.list/1","doc":"<.list>\n      <:item title=\"Title\"><%= @post.title %></:item>\n      <:item title=\"Views\"><%= @post.views %></:item>\n    </.list>","ref":"WebInterface.CoreComponents.html#list/1-examples"},{"type":"function","title":"Slots - WebInterface.CoreComponents.list/1","doc":"* `item` (required) - Accepts attributes:\n\n  * `title` (`:string`) (required)","ref":"WebInterface.CoreComponents.html#list/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.modal/1","doc":"Renders a modal.","ref":"WebInterface.CoreComponents.html#modal/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.modal/1","doc":"<.modal id=\"confirm-modal\">\n      This is a modal.\n    </.modal>\n\nJS commands may be passed to the `:on_cancel` to configure\nthe closing/cancel event, for example:\n\n    <.modal id=\"confirm\" on_cancel={JS.navigate(~p\"/posts\")}>\n      This is another modal.\n    </.modal>","ref":"WebInterface.CoreComponents.html#modal/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.modal/1","doc":"* `id` (`:string`) (required)\n* `show` (`:boolean`) - Defaults to `false`.\n* `on_cancel` (`Phoenix.LiveView.JS`) - Defaults to `%Phoenix.LiveView.JS{ops: []}`.","ref":"WebInterface.CoreComponents.html#modal/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.modal/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#modal/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.progress_bar/1","doc":"Renders a progress bar for an ongoing operation.","ref":"WebInterface.CoreComponents.html#progress_bar/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.progress_bar/1","doc":"<.progress_bar hidden=false progress=15 />\n    <.progress_bar hidden=true progress=0 message=\"Activating system ...\" />\n    <.progress_bar class=\"cool-bar\" />","ref":"WebInterface.CoreComponents.html#progress_bar/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.progress_bar/1","doc":"* `hidden` (`:boolean`) - whether or not to show the progress bar. Defaults to `false`.\n* `progress` (`:integer`) - the current progress of the bar. Defaults to `0`.\n* `message` (`:string`) - the message to show while the bar is progressing. Defaults to `\"Operation in progress ...\"`.\n* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#progress_bar/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.radiogroup/1","doc":"Generate a radio button group.","ref":"WebInterface.CoreComponents.html#radiogroup/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.radiogroup/1","doc":"<.radiogroup\n    field={@form[:genres]}\n    label=\"Genres\"\n    options={[{\"Fantasy\", \"fantasy\"}, {\"Science Fiction\", \"sci-fi\"}]}\n    selected={%{\"Science Fiction\", \"sci-fi\"}}\n  />","ref":"WebInterface.CoreComponents.html#radiogroup/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.radiogroup/1","doc":"* `id` (`:any`)\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:genres].\n* `errors` (`:list`)\n* `required` (`:boolean`) - Defaults to `false`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `class` (`:string`) - Defaults to `nil`.\n* `selected` (`:any`) - the currently selected option, to know which radio button is checked. Defaults to `nil`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#radiogroup/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.section/1","doc":"Renders the title and description for a new section.","ref":"WebInterface.CoreComponents.html#section/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.section/1","doc":"<.section title=\"Strategy\" description=\"This is a cool strategy!\" />","ref":"WebInterface.CoreComponents.html#section/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.section/1","doc":"* `title` (`:string`) (required) - the title of the section.\n* `description` (`:string`) (required) - the description of the section.","ref":"WebInterface.CoreComponents.html#section/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.show/2","doc":"","ref":"WebInterface.CoreComponents.html#show/2"},{"type":"function","title":"WebInterface.CoreComponents.show_modal/2","doc":"","ref":"WebInterface.CoreComponents.html#show_modal/2"},{"type":"function","title":"WebInterface.CoreComponents.simple_form/1","doc":"Renders a simple form.","ref":"WebInterface.CoreComponents.html#simple_form/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.simple_form/1","doc":"<.simple_form for={@form} phx-change=\"validate\" phx-submit=\"save\">\n      <.input field={@form[:email]} label=\"Email\"/>\n      <.input field={@form[:username]} label=\"Username\" />\n      <:actions>\n        <.button>Save</.button>\n      </:actions>\n    </.simple_form>","ref":"WebInterface.CoreComponents.html#simple_form/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.simple_form/1","doc":"* `for` (`:any`) (required) - the data-structure for the form.\n* `as` (`:any`) - the server side parameter to collect all input under. Defaults to `nil`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#simple_form/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.simple_form/1","doc":"* `inner_block` (required)\n* `actions` - the slot for form actions, such as a submit button.","ref":"WebInterface.CoreComponents.html#simple_form/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.table/1","doc":"Renders a table with generic styling.","ref":"WebInterface.CoreComponents.html#table/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.table/1","doc":"<.table id=\"users\" rows={@users}>\n      <:col :let={user} label=\"id\"><%= user.id %></:col>\n      <:col :let={user} label=\"username\"><%= user.username %></:col>\n    </.table>","ref":"WebInterface.CoreComponents.html#table/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.table/1","doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"WebInterface.CoreComponents.html#table/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.table/1","doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"WebInterface.CoreComponents.html#table/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.toggle_dropdown/1","doc":"","ref":"WebInterface.CoreComponents.html#toggle_dropdown/1"},{"type":"function","title":"WebInterface.CoreComponents.translate_error/1","doc":"Translates an error message using gettext.","ref":"WebInterface.CoreComponents.html#translate_error/1"},{"type":"function","title":"WebInterface.CoreComponents.translate_errors/2","doc":"Translates the errors for a field from a keyword list of errors.","ref":"WebInterface.CoreComponents.html#translate_errors/2"},{"type":"module","title":"WebInterface.DeactivateLive","doc":"","ref":"WebInterface.DeactivateLive.html"},{"type":"function","title":"WebInterface.DeactivateLive.disable_button?/2","doc":"","ref":"WebInterface.DeactivateLive.html#disable_button?/2"},{"type":"function","title":"WebInterface.DeactivateLive.render/1","doc":"Callback implementation for  Phoenix.LiveView.render/1 .","ref":"WebInterface.DeactivateLive.html#render/1"},{"type":"module","title":"WebInterface.Desktop.MenuBar","doc":"Menubar that is shown as part of the main Window on Windows/Linux. In\nMacOS this Menubar appears at the very top of the screen.","ref":"WebInterface.Desktop.MenuBar.html"},{"type":"module","title":"WebInterface.Desktop.WindowUtils","doc":"Contains utility functions to determine window attributes.","ref":"WebInterface.Desktop.WindowUtils.html"},{"type":"function","title":"WebInterface.Desktop.WindowUtils.calculate_window_size/2","doc":"Calculates the width and height for the window. Fetches the display\ninformation using :wx. Because we create a :wx server every time we call this\nfunction this is a heavy operation and should be used cautiously.\n\nBoth percentages given must be > 0 and <= 1.","ref":"WebInterface.Desktop.WindowUtils.html#calculate_window_size/2"},{"type":"module","title":"WebInterface.ErrorHTML","doc":"","ref":"WebInterface.ErrorHTML.html"},{"type":"function","title":"WebInterface.ErrorHTML.render/2","doc":"","ref":"WebInterface.ErrorHTML.html#render/2"},{"type":"module","title":"WebInterface.ErrorJSON","doc":"","ref":"WebInterface.ErrorJSON.html"},{"type":"function","title":"WebInterface.ErrorJSON.render/2","doc":"","ref":"WebInterface.ErrorJSON.html#render/2"},{"type":"module","title":"WebInterface.LoginLive","doc":"","ref":"WebInterface.LoginLive.html"},{"type":"function","title":"WebInterface.LoginLive.render/1","doc":"Callback implementation for  Phoenix.LiveView.render/1 .","ref":"WebInterface.LoginLive.html#render/1"},{"type":"module","title":"WebInterface.LogoutLive","doc":"","ref":"WebInterface.LogoutLive.html"},{"type":"module","title":"WebInterface.PageController","doc":"","ref":"WebInterface.PageController.html"},{"type":"function","title":"WebInterface.PageController.home/2","doc":"","ref":"WebInterface.PageController.html#home/2"},{"type":"module","title":"WebInterface.PageHTML","doc":"","ref":"WebInterface.PageHTML.html"},{"type":"function","title":"WebInterface.PageHTML.home/1","doc":"","ref":"WebInterface.PageHTML.html#home/1"},{"type":"module","title":"WebInterface.Persistence","doc":"Responsible for temporary persistence in WebInterface. Saves state that needs to be shared between LiveViews.\nUses ETS beneath the scenes.","ref":"WebInterface.Persistence.html"},{"type":"function","title":"WebInterface.Persistence.default_table/0","doc":"","ref":"WebInterface.Persistence.html#default_table/0"},{"type":"function","title":"WebInterface.Persistence.init/4","doc":"","ref":"WebInterface.Persistence.html#init/4"},{"type":"type","title":"WebInterface.Persistence.table/0","doc":"","ref":"WebInterface.Persistence.html#t:table/0"},{"type":"module","title":"WebInterface.Persistence.Strategy","doc":"Persistence module for strategy data. Mostly to track which strategy is selected in the menu and access the list of\nstrategies.","ref":"WebInterface.Persistence.Strategy.html"},{"type":"function","title":"WebInterface.Persistence.Strategy.get_selected_strategy/1","doc":"Returns the currently selected strategy in the Activate tab in the web_interface. Only one strategy may be selected at\nany given time, even though other strategies may be activate for other syndicates.","ref":"WebInterface.Persistence.Strategy.html#get_selected_strategy/1"},{"type":"function","title":"WebInterface.Persistence.Strategy.get_strategies/1","doc":"Returns all the strategies known to the Manager.","ref":"WebInterface.Persistence.Strategy.html#get_strategies/1"},{"type":"function","title":"WebInterface.Persistence.Strategy.get_strategy_by_id/2","doc":"Returns a strategy entity, given its id.","ref":"WebInterface.Persistence.Strategy.html#get_strategy_by_id/2"},{"type":"function","title":"WebInterface.Persistence.Strategy.set_selected_strategy/2","doc":"Marks a strategy as selected, for the web_interface only. Does not talk to the Manager.\nUnlike Syndicates, strategies cannot be disabled, as only a single strategy can be selected at any given time.","ref":"WebInterface.Persistence.Strategy.html#set_selected_strategy/2"},{"type":"module","title":"WebInterface.Persistence.Syndicate","doc":"Persistence module for syndicate data. Mostly to track selected options in the menu and access the list of\nsyndicates.","ref":"WebInterface.Persistence.Syndicate.html"},{"type":"function","title":"WebInterface.Persistence.Syndicate.activate_syndicate/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#activate_syndicate/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.activate_syndicates/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#activate_syndicates/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.all_syndicates_active?/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#all_syndicates_active?/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.deactivate_syndicate/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#deactivate_syndicate/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.deactivate_syndicates/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#deactivate_syndicates/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_active_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_active_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_all_syndicates_by_id/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_all_syndicates_by_id/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_inactive_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_inactive_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_selected_active_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_selected_active_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_selected_inactive_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_selected_inactive_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_syndicate_by_id/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_syndicate_by_id/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.set_selected_active_syndicates/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#set_selected_active_syndicates/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.set_selected_inactive_syndicates/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#set_selected_inactive_syndicates/2"},{"type":"function","title":"WebInterface.Persistence.Syndicate.syndicate_active?/2","doc":"","ref":"WebInterface.Persistence.Syndicate.html#syndicate_active?/2"},{"type":"module","title":"WebInterface.Persistence.User","doc":"Persistence module for user related data.","ref":"WebInterface.Persistence.User.html"},{"type":"function","title":"WebInterface.Persistence.User.get_user/1","doc":"","ref":"WebInterface.Persistence.User.html#get_user/1"},{"type":"function","title":"WebInterface.Persistence.User.has_user?/1","doc":"","ref":"WebInterface.Persistence.User.html#has_user?/1"},{"type":"function","title":"WebInterface.Persistence.User.set_user/2","doc":"","ref":"WebInterface.Persistence.User.html#set_user/2"},{"type":"module","title":"WebInterface.ProfileLive","doc":"","ref":"WebInterface.ProfileLive.html"},{"type":"function","title":"WebInterface.ProfileLive.render/1","doc":"Callback implementation for  Phoenix.LiveView.render/1 .","ref":"WebInterface.ProfileLive.html#render/1"},{"type":"extras","title":"README","doc":"# MarketManager\n\nMakes sell requests in batch to warframe market.\nUsed when you want to sell a lot of things or remove them from your list all at once. Specially useful for syndicates \nbecause you don't have to buy everything in advance and then sell. You only need to do 3 things:\n\n- Launch the manager\n- Activate a syndicate(s) you want\n- Sit back and relax\n\nThen, when someone pings you to buy an item, you can go the syndicate, buy it and sell it on the spot.\n\nWarframeMarket (the website) does have a 100 items limit though, so you may want to keep this in mind as you won't be \nable to activate everything (unless you are a Patreon, in which case the limit does not apply).\n\n# Requirements\n\nThis application has no requirements on the user side, as the entire erlang VM and context are bundled together with the \napplication in the zip file.\n\nBy default the application will open a separate browser window and it will run there using your localhost.\n\nIf however, you wish to run the application in windowed mode, you can do so by downloading and installing WebView2 \nsupport for Edge:\n\n-  \n\nAfter the installation, the application will default to the windowed mode. You can however still use the browser if you \nwish by going to **Extras -> Open in browser**.\n\n# User guide\n\nAs a user, you will see two windows opening. The **interface** (explained in the next subchapter) and the **terminal**.\nThe terminal is there for mostly two things:\n\n- transparency to the user: This way you can see what the application is really doing.\n- debugging: By seeing the logs, you can help contribute with errors. \n\nFor this reason, I won't be explaining anything about the terminal, although it is important to note that **if you kill\nthe terminal (by closing it), you will also kill the application**. This can be useful, in case the apps bugs out, which \nshould be rare.","ref":"readme.html"},{"type":"extras","title":"Interface - README","doc":"This section has some basic references and help for users that want to learn how to use the application.\n\nOnce you download and extract the contents of the zip file, you can launch the application via the shortcut. \n(You need to give Windows the necessary permissions, which will pop up)\n\nWith that out of the day you will be greeted with the login menu:\n\n     \n \n \n\nIt is important to note that the application **does not save your credentials**. We only save an authentication token\nthat expires after some time. \nFurthermore, your credentials **are not transmitted anywhere**, so you don't have to worry about that.\n\nOnce the login is done, you can either activate or deactivate a set of syndicates.\n\n     \n \n \n \n\nActivating and deactivating are both operations that can take a long time, so you usually see a progress screen:\n\n     \n \n \n\nYou can also logout by clicking in your username at the top right corner if you wish.\n\n# Developer Guide\n\nThis guide describes a developer setup for Windows.","ref":"readme.html#interface"},{"type":"extras","title":"Requirements - README","doc":"- Erlang OTP >= 26:  \n- Elixir >= 1.16 (I recommend the installer):  \n- wxWidget:  \n- While it doesn't require a lot of memory to run, it does require a lot of memory to compile, at least 4GB.\n- If using powershell, you need to have permissions to run scripts: `Set-ExecutionPolicy -ExecutionPolicy Bypass`\n- Install chocolatey:  \n- Install bakeware dependencies: `choco install -y zstandard make mingw`\n- Setup powershell environment variables `$env:CC=\"gcc\"` and `$env:MAKE=\"make\"`\n- An editor of your choice. I use VScode with some plugins and the `Fira Code` font:  \n- To test the application in Windowed mode, you also need to install WebView2 support for Edge. Refer to the \n**User Guide** section for more information.","ref":"readme.html#requirements"},{"type":"extras","title":"How to run it - README","doc":"After the initial setup, the following commands are used to get started:\n\n- `mix local.hex` to install / update hex\n- `mix archive.install hex phx_new` to install the Phoenix framework\n- `mix deps.get` fetches and installs all the dependencies\n- `mix test` run all tests\n- `mix test.watch` runs all tests continuously and re-runs them every time a file changes","ref":"readme.html#how-to-run-it"},{"type":"extras","title":"Architecture - README","doc":"MarketManager is divided into multiple small applications/libraries, each one with a single purpose in mind:\n\n```mermaid\n  graph TD;\n      web_interface-->manager;\n      manager-->auction_house;\n      manager-->store;\n      shared-->manager;\n      shared-->store;\n      shared-->web_interface;\n      shared-->auction_house;\n```\n\n- `web_interface` is a Phoenix application that holds all the code for the front-end. Works as the client.\n- `manager` is the core of the application, the entry point for all user requests. It talks to the rest of the layers.\n- `auction_house` is the app responsible for understanding and making requests to the given auction house. In this case, warframe market.\n- `store` is the persistency layer. It saves your data and remembers what is being sold or not.\n- `shared` is a library that holds the domain model entities of the entire project. \n\nFor more information, feel free to read the README file of each application.\n\nA previous version of MarketManager also had a `cli` application interfacing with `manager`. This can still be seen in the `v1` branch, which is being saved for posterity:  \n\nDo note that `v1` was the alpha release and is no longer being supported. It is still a very good resource for applications with CLI interfaces though.","ref":"readme.html#architecture"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.2"}}