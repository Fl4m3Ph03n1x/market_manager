searchData={"items":[{"type":"module","title":"AuctionHouse","doc":"Library representing the interface for the auction house.\nResponsible for making calls and decoding the answers from the auction house\ninto a format the manager understands.","ref":"AuctionHouse.html"},{"type":"function","title":"AuctionHouse.delete_order/1","doc":"Deletes an order from warframe market.\n\nExample:\n```\n> placed_order = PlacedOrder.new(%{\n    \"item_id\" => \"54e644ffe779897594fa68cd\",\n    \"order_id\" => \"626127cbc984ac033cd2bbd2\"\n})\n\n> AuctionHouse.delete_order(placed_order)\n:ok\n\n> AuctionHouse.delete_order(placed_order)\n{:error, :reason, order_id}\n```","ref":"AuctionHouse.html#delete_order/1"},{"type":"function","title":"AuctionHouse.get_all_orders/1","doc":"Gets all warframe market orders for the item with the given name.\nThe item's name is in human readable format. This function also converts the\nname into a format that the external party can understand.\n\nExample:\n```\n> item_name = \"Despoil\"\n\n> AuctionHouse.get_all_orders(item_name)\n{:ok, [\n  %Shared.Data.OrderInfo{\n        \"visible\" => true,\n        \"order_type\" => \"sell\",\n        \"platform\" => \"pc\",\n        \"platinum\" => 20,\n        \"user\" => %Shared.Data.OrderInfo.User{\n          \"ingame_name\" => \"user_name_1\",\n          \"status\" => \"ingame\"\n        }\n      }\n    ]\n}\n\n> AuctionHouse.get_all_orders(item_name)\n{:error, :reason, item_name}\n```","ref":"AuctionHouse.html#get_all_orders/1"},{"type":"function","title":"AuctionHouse.login/1","doc":"Stores the user's credentials and  authenticates with the auction house to\nmake requests. Must be invoked every time the application is launched.\nIt also performs the necessary steps for authorization. Returns user\ninformation.\n\nExample:\n```\n> alias Shared.Data.{Authorization, Credentials, User}\n> credentials = Credentials.new(\"the_username\", \"the_password\")\n\n> AuctionHouse.login(credentials)\n{:ok,\n  {\n    %Authorization{cookie: \"a_cookie\", token: \"a_token\"},\n    %User{patreon?: false, ingame_name: \"fl4m3\"}\n  }\n}\n\n> AuctionHouse.login(credentials)\n{:error, :reason, credentials}\n```","ref":"AuctionHouse.html#login/1"},{"type":"function","title":"AuctionHouse.logout/0","doc":"Deletes the current session and user data from the this application.\nDoes not interact with the External AuctionHouse, this is a local operation only.\n\nExample:\n```\n> AuctionHouse.logout()\n:ok\n```","ref":"AuctionHouse.html#logout/0"},{"type":"function","title":"AuctionHouse.place_order/1","doc":"Places an order in warframe market.\n\nExample:\n```\n> alias Shared.Data.{Order, PlacedOrder}\n> order = Order.new(%{\n  \"item_id\" => \"54e644ffe779897594fa68cd\",\n  \"mod_rank\" => 0,\n  \"order_type\" => \"sell\",\n  \"platinum\" => 20,\n  \"quantity\" => 1\n})\n\n> AuctionHouse.place_order(order)\n{:ok,\n  %PlacedOrder{\n    item_id: \"54e644ffe779897594fa68cd\",\n    order_id: \"626127cbc984ac033cd2bbd2\"\n  }\n}\n\n> AuctionHouse.place_order(order)\n{:error, :reason, order}\n```","ref":"AuctionHouse.html#place_order/1"},{"type":"function","title":"AuctionHouse.recover_login/2","doc":"Feeds the authorization information directly to the AuctionHouse. Used when\nthe login data is being recovered from a past login. Will only fail if this\nservice is down.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n> auth = Authorization.new(\"a_cookie\", \"a_token\")\n> user = User.new(\"fl4m3\", false)\n\n> AuctionHouse.recover_login(auth, user)\n:ok\n```","ref":"AuctionHouse.html#recover_login/2"},{"type":"module","title":"AuctionHouse.Impl.HTTPClient","doc":"Adapter for the interface AuctionHouse","ref":"AuctionHouse.Impl.HTTPClient.html"},{"type":"function","title":"AuctionHouse.Impl.HTTPClient.delete_order/2","doc":"","ref":"AuctionHouse.Impl.HTTPClient.html#delete_order/2"},{"type":"function","title":"AuctionHouse.Impl.HTTPClient.get_all_orders/2","doc":"","ref":"AuctionHouse.Impl.HTTPClient.html#get_all_orders/2"},{"type":"function","title":"AuctionHouse.Impl.HTTPClient.login/2","doc":"","ref":"AuctionHouse.Impl.HTTPClient.html#login/2"},{"type":"function","title":"AuctionHouse.Impl.HTTPClient.place_order/2","doc":"","ref":"AuctionHouse.Impl.HTTPClient.html#place_order/2"},{"type":"module","title":"AuctionHouse.Impl.Settings","doc":"Holds configurations that do not depend on the environment. 12 factor app\nstandard states that only configurations that depend on the environment should\nbe configurable in config files (config folder).\n\nSince these variables are all compile time, no matter the environment they are\nused for, this module will hold them.","ref":"AuctionHouse.Impl.Settings.html"},{"type":"function","title":"AuctionHouse.Impl.Settings.requests_per_second/0","doc":"Returns how many requests per second the throttling queue will make.","ref":"AuctionHouse.Impl.Settings.html#requests_per_second/0"},{"type":"function","title":"AuctionHouse.Impl.Settings.requests_queue/0","doc":"Returns the name of the throttling queue used to make requests to\nwarframe.market.","ref":"AuctionHouse.Impl.Settings.html#requests_queue/0"},{"type":"module","title":"AuctionHouse.Runtime.Server","doc":"Process responsible for managing requests to the auction house.\nTalks to the logic layer and terminates gracefully.","ref":"AuctionHouse.Runtime.Server.html"},{"type":"function","title":"AuctionHouse.Runtime.Server.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"AuctionHouse.Runtime.Server.html#child_spec/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.delete_order/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#delete_order/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.get_all_orders/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#get_all_orders/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.login/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#login/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.logout/0","doc":"","ref":"AuctionHouse.Runtime.Server.html#logout/0"},{"type":"function","title":"AuctionHouse.Runtime.Server.place_order/1","doc":"","ref":"AuctionHouse.Runtime.Server.html#place_order/1"},{"type":"function","title":"AuctionHouse.Runtime.Server.recover_login/2","doc":"","ref":"AuctionHouse.Runtime.Server.html#recover_login/2"},{"type":"function","title":"AuctionHouse.Runtime.Server.start_link/0","doc":"","ref":"AuctionHouse.Runtime.Server.html#start_link/0"},{"type":"module","title":"AuctionHouse.Type","doc":"Holds the types for this library.","ref":"AuctionHouse.Type.html"},{"type":"type","title":"AuctionHouse.Type.delete_order_response/0","doc":"","ref":"AuctionHouse.Type.html#t:delete_order_response/0"},{"type":"type","title":"AuctionHouse.Type.get_all_orders_response/0","doc":"","ref":"AuctionHouse.Type.html#t:get_all_orders_response/0"},{"type":"type","title":"AuctionHouse.Type.item_id/0","doc":"","ref":"AuctionHouse.Type.html#t:item_id/0"},{"type":"type","title":"AuctionHouse.Type.item_name/0","doc":"","ref":"AuctionHouse.Type.html#t:item_name/0"},{"type":"type","title":"AuctionHouse.Type.login_response/0","doc":"","ref":"AuctionHouse.Type.html#t:login_response/0"},{"type":"type","title":"AuctionHouse.Type.logout_response/0","doc":"","ref":"AuctionHouse.Type.html#t:logout_response/0"},{"type":"type","title":"AuctionHouse.Type.place_order_response/0","doc":"","ref":"AuctionHouse.Type.html#t:place_order_response/0"},{"type":"type","title":"AuctionHouse.Type.reason/0","doc":"","ref":"AuctionHouse.Type.html#t:reason/0"},{"type":"type","title":"AuctionHouse.Type.recover_login_response/0","doc":"","ref":"AuctionHouse.Type.html#t:recover_login_response/0"},{"type":"type","title":"AuctionHouse.Type.state/0","doc":"","ref":"AuctionHouse.Type.html#t:state/0"},{"type":"module","title":"Manager","doc":"MarketManager is an application that allows you to make batch requests to\nwarframe.market. This is the entrypoint of everything. If you have a module\nand you need to talk to MarketManager, this is who you call, the public API.","ref":"Manager.html"},{"type":"function","title":"Manager.activate/2","doc":"Asynchronous operation.\n\nActivates a syndicate in warframe.market. Activating a syndicate means you\nput on sell all the mods the syndicate has. The price of each mod will be calculated via a\n`PriceAnalyst` depending on which strategy you choose.\n\nThis is an asynchronous operation, which will return `:ok` immediately.\nThe caller must have implemented a `handle_info` in its Server to handle messages with the\nfollowing format:\n\n- `{:activate, syndicate :: String.t(), {index :: pos_integer(), total :: pos_integer(), result :: any}}`:\n  Each time a placement for an item is done. This message contains the current index, the total\n  and the result of the operation. It also has the id of the syndicate this order placement\n  belongs to.\n  The `result` of an operation, will be a tagged tuple. Some common formats are:\n\n   - `{:ok, order_id :: String.t()}`, when the placement was successful\n   - `{:error, reason :: any(), item_id :: String.t()}`, when the placement failed\n\n- `{:activate, syndicate :: String.t(), :done}`: Once all orders have been placed (successfully\n  or not). It is the end of the `:activate` operation. It also has the id of the syndicate for\n  which this operation was completed for.\n- `{:activate, syndicate :: String.t(), error :: any}`: If a critical error occurred while trying\n  to perform the `:activate` operation and this cannot continue/succeed. It also signals the end\n  of the operation. Contains the id of the syndicate for which the operation failed.\n\nExample:\n```\n> Manager.activate(\"cephalon_simaris\", :lowest_minus_one)\n:ok\n```","ref":"Manager.html#activate/2"},{"type":"function","title":"Manager.active_syndicates/0","doc":"Synchronous operation.\n\nReturns a list containing all currently active syndicates.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> MarketManager.active_syndicates()\n{:ok, [%Syndicate{name: \"Red Veil\", id: :red_veil, catalog: []}]}\n\n> Manager.active_syndicates()\n{:error, :enoent}","ref":"Manager.html#active_syndicates/0"},{"type":"function","title":"Manager.deactivate/1","doc":"Asynchronous operation.\n\nDeactivates a syndicate in warframe.market. Deactivating a syndicate means you\ndelete all orders you have placed before that belong to the given syndicate.\n\nThis is an asynchronous operation, which will return `:ok` immediately.\nThe caller must have implemented a `handle_info` in its Server to handle messages with the\nfollowing format:\n\n- `{:deactivate, syndicate :: String.t(), {index :: pos_integer(), total :: pos_integer(), result :: any}}`:\n  Each time a placement for an item is done. This message contains the current index, the total\n  and the result of the operation. It also has the id of the syndicate this order placement\n  belongs to.\n  The `result` of an operation, will be a tagged tuple. Some common formats are:\n\n   - `{:ok, order_id :: String.t()}`, when the deletion was successful\n   - `{:error, reason :: any(), order_id :: String.t()}`, when the deletion failed\n\n- `{:deactivate, syndicate :: String.t(), :done}`: Once all orders have been deleted (successfully\n  or not). It is the end of the `:deactivate` operation. It also has the id of the syndicate for\n  which this operation was completed for.\n- `{:deactivate, syndicate :: String.t(), error :: any}`: If a critical error occurred while trying\n  to perform the `:deactivate` operation and this cannot continue/succeed. It also signals the end\n  of the operation. Contains the id of the syndicate for which the operation failed.\n\nExample:\n```\n> Manager.deactivate(\"cephalon_simaris\")\n:ok\n```","ref":"Manager.html#deactivate/1"},{"type":"function","title":"Manager.login/2","doc":"Asynchronous operation.\n\nSaves the login information used in all requests. Can optionally keep user\nlogged in for future sessions. Will first attempt to authenticate the user,\nand then, if successful and if `keep_logged_in` is `true`, will try to save\nthe authentication parameters. Should it fail to save the authentication\nparameters, the login request is still done.\n\nThis is an asynchronous operation, which will return `:ok` immediately.\nThe caller must have implemented a `handle_info` in its Server to handle messages with the\nfollowing format:\n\n- `{:login, user_info :: Shared.Data.User.t(), :done}`: If the operation was successful.\n\n- `{:login, credentials :: Shared.Data.Credentials.t(), error :: any}`: If the login operation failed.\n  This can happen due to a network error, wrong password or any other cause.\n\nExample:\n```\n> alias Shared.Data.Credentials\n\n> credentials = Credentials.new(\"username\", \"password\")\n\n> Manager.login(credentials, false)\n:ok\n```","ref":"Manager.html#login/2"},{"type":"function","title":"Manager.logout/0","doc":"Synchronous operation.\n\nDeletes the current active session. This only logs out the MarketManager application and does not affect the\nlogin session in the AuctionHouse. If a user is logged in the AuctionHouse, it will continue logged in there, but next\ntime this application is launched, the user will have to login into the AuctionHouse from this application to be able\nto use it.\n\nThis operation deletes the sessions data from memory and from disk. Even if the second fails, the first will still\nbe attempted.\n\nExample:\n```\n> Manager.logout()\n:ok\n\n> Manager.logout()\n{:error, :reason}\n```","ref":"Manager.html#logout/0"},{"type":"function","title":"Manager.recover_login/0","doc":"Synchronous operation.\n\nLogin into the application using a previous session.\nIf this operation is attempted and the user has not logged in yet, `nil` is returned instead of a User.\n\nExample:\n```\n> alias Shared.Data.User\n\n> Manager.recover_login()\n{:ok, %User{ingame_name: \"user_1\", patreon?: false}}\n\n> Manager.recover_login()\n{:ok, nil}\n\n> Manager.recover_login()\n{:error, :enoent}\n```","ref":"Manager.html#recover_login/0"},{"type":"function","title":"Manager.strategies/0","doc":"Synchronous operation.\n\nReturns the list of available strategies, or an error if it fails.\n\nExample:\n```\n> alias Shared.Data.Strategy\n\n> Manager.strategies()\n{:ok, [\n  %Strategy{\n    name: \"Top 3 Average\",\n    id: :top_three_average,\n    description: \"Gets the 3 lowest prices for the given item and calculates the average.\"\n  },\n  %Strategy{\n    name: \"Top 5 Average\",\n    id: :top_five_average,\n    description: \"Gets the 5 lowest prices for the given item and calculates the average.\"\n  }\n]}\n\n> Manager.strategies()\n{:error, :reason}\n```","ref":"Manager.html#strategies/0"},{"type":"function","title":"Manager.syndicates/0","doc":"Synchronous operation.\n\nReturns the list of known syndicates, or an error if it fails.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> MarketManager.syndicates()\n{:ok, [%Syndicate{name: \"Red Veil\", id: :red_veil, catalog: []}]}\n\n> Manager.syndicates()\n{:error, :enoent}\n```","ref":"Manager.html#syndicates/0"},{"type":"module","title":"Manager.Impl.Interpreter","doc":"Core of the manager, where all the logic and communication with outer\nlayers is. Currently, it works more like a bridge between the different ports\nof the application and manages data between them.","ref":"Manager.Impl.Interpreter.html"},{"type":"function","title":"Manager.Impl.Interpreter.activate/4","doc":"","ref":"Manager.Impl.Interpreter.html#activate/4"},{"type":"function","title":"Manager.Impl.Interpreter.active_syndicates/1","doc":"","ref":"Manager.Impl.Interpreter.html#active_syndicates/1"},{"type":"function","title":"Manager.Impl.Interpreter.deactivate/3","doc":"","ref":"Manager.Impl.Interpreter.html#deactivate/3"},{"type":"function","title":"Manager.Impl.Interpreter.login/4","doc":"","ref":"Manager.Impl.Interpreter.html#login/4"},{"type":"function","title":"Manager.Impl.Interpreter.logout/1","doc":"","ref":"Manager.Impl.Interpreter.html#logout/1"},{"type":"function","title":"Manager.Impl.Interpreter.recover_login/1","doc":"","ref":"Manager.Impl.Interpreter.html#recover_login/1"},{"type":"function","title":"Manager.Impl.Interpreter.strategies/0","doc":"","ref":"Manager.Impl.Interpreter.html#strategies/0"},{"type":"function","title":"Manager.Impl.Interpreter.syndicates/1","doc":"","ref":"Manager.Impl.Interpreter.html#syndicates/1"},{"type":"module","title":"Manager.Impl.PriceAnalyst","doc":"Strategies calculate the optimum price for you to sell an item.\n\nThere are several strategies, some focus more on selling fast, while others\non getting more profit.\n\nThe strategy to use is selected at runtime. See the Manager.Impl.Strategy for more information on this.","ref":"Manager.Impl.PriceAnalyst.html"},{"type":"function","title":"Manager.Impl.PriceAnalyst.calculate_price/3","doc":"","ref":"Manager.Impl.PriceAnalyst.html#calculate_price/3"},{"type":"function","title":"Manager.Impl.PriceAnalyst.list_strategies/0","doc":"","ref":"Manager.Impl.PriceAnalyst.html#list_strategies/0"},{"type":"behaviour","title":"Manager.Impl.Strategy","doc":"Behaviour that specifies the functions any strategy must implement. It is mostly used to provide an implementation of\nthe Strategy pattern from OO languages, but adapted to Elixir.\n\nThe pricing strategy will be selected and executed dynamically at runtime, as long as it implements this behaviour.","ref":"Manager.Impl.Strategy.html"},{"type":"callback","title":"Manager.Impl.Strategy.calculate_price/1","doc":"","ref":"Manager.Impl.Strategy.html#c:calculate_price/1"},{"type":"function","title":"Manager.Impl.Strategy.id_to_module/1","doc":"","ref":"Manager.Impl.Strategy.html#id_to_module/1"},{"type":"callback","title":"Manager.Impl.Strategy.info/0","doc":"","ref":"Manager.Impl.Strategy.html#c:info/0"},{"type":"function","title":"Manager.Impl.Strategy.module_to_id/1","doc":"","ref":"Manager.Impl.Strategy.html#module_to_id/1"},{"type":"module","title":"Manager.Impl.Strategy.EqualToLowest","doc":"Gets the lowest price for the given item and uses it.","ref":"Manager.Impl.Strategy.EqualToLowest.html"},{"type":"module","title":"Manager.Impl.Strategy.LowestMinusOne","doc":"Gets the lowest price for the given item and beats it by 1.","ref":"Manager.Impl.Strategy.LowestMinusOne.html"},{"type":"module","title":"Manager.Impl.Strategy.TopFiveAverage","doc":"Gets the 5 lowest prices for the given item and calculates the average.","ref":"Manager.Impl.Strategy.TopFiveAverage.html"},{"type":"module","title":"Manager.Impl.Strategy.TopThreeAverage","doc":"Gets the 3 lowest prices for the given item and calculates the average.","ref":"Manager.Impl.Strategy.TopThreeAverage.html"},{"type":"module","title":"Manager.Runtime.Server","doc":"Process responsible for taking requests from the interface and directing them\nto the appropriate layers. Supervises dependencies to make sure they are\nregenerated should something fail.","ref":"Manager.Runtime.Server.html"},{"type":"function","title":"Manager.Runtime.Server.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Runtime.Server.html#child_spec/1"},{"type":"function","title":"Manager.Runtime.Server.start_link/0","doc":"","ref":"Manager.Runtime.Server.html#start_link/0"},{"type":"module","title":"Manager.Runtime.Worker","doc":"Process responsible for doing asynchronous tasks. The Worker is supervised by the `Server` and is\nrestarted should something fail. It communicates with the calling client via `send/2`, since we\ndon't know if the client is a `GenServer` or not. Should this change (and we are sure the client\nis a `GenServer`) then `GenServer.cast` should be used instead.","ref":"Manager.Runtime.Worker.html"},{"type":"function","title":"Manager.Runtime.Worker.activate/2","doc":"","ref":"Manager.Runtime.Worker.html#activate/2"},{"type":"function","title":"Manager.Runtime.Worker.active_syndicates/0","doc":"","ref":"Manager.Runtime.Worker.html#active_syndicates/0"},{"type":"function","title":"Manager.Runtime.Worker.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Manager.Runtime.Worker.html#child_spec/1"},{"type":"function","title":"Manager.Runtime.Worker.deactivate/1","doc":"","ref":"Manager.Runtime.Worker.html#deactivate/1"},{"type":"function","title":"Manager.Runtime.Worker.login/2","doc":"","ref":"Manager.Runtime.Worker.html#login/2"},{"type":"function","title":"Manager.Runtime.Worker.logout/0","doc":"","ref":"Manager.Runtime.Worker.html#logout/0"},{"type":"function","title":"Manager.Runtime.Worker.recover_login/0","doc":"","ref":"Manager.Runtime.Worker.html#recover_login/0"},{"type":"function","title":"Manager.Runtime.Worker.start_link/1","doc":"","ref":"Manager.Runtime.Worker.html#start_link/1"},{"type":"function","title":"Manager.Runtime.Worker.strategies/0","doc":"","ref":"Manager.Runtime.Worker.html#strategies/0"},{"type":"function","title":"Manager.Runtime.Worker.syndicates/0","doc":"","ref":"Manager.Runtime.Worker.html#syndicates/0"},{"type":"type","title":"Manager.Runtime.Worker.state/0","doc":"","ref":"Manager.Runtime.Worker.html#t:state/0"},{"type":"module","title":"Manager.Type","doc":"Holds the types for the Manager library.","ref":"Manager.Type.html"},{"type":"type","title":"Manager.Type.activate_response/0","doc":"","ref":"Manager.Type.html#t:activate_response/0"},{"type":"type","title":"Manager.Type.activate_syndicates_response/0","doc":"","ref":"Manager.Type.html#t:activate_syndicates_response/0"},{"type":"type","title":"Manager.Type.deactivate_response/0","doc":"","ref":"Manager.Type.html#t:deactivate_response/0"},{"type":"type","title":"Manager.Type.dependencies/0","doc":"","ref":"Manager.Type.html#t:dependencies/0"},{"type":"type","title":"Manager.Type.handle/0","doc":"","ref":"Manager.Type.html#t:handle/0"},{"type":"type","title":"Manager.Type.item_id/0","doc":"","ref":"Manager.Type.html#t:item_id/0"},{"type":"type","title":"Manager.Type.login_response/0","doc":"","ref":"Manager.Type.html#t:login_response/0"},{"type":"type","title":"Manager.Type.logout_response/0","doc":"","ref":"Manager.Type.html#t:logout_response/0"},{"type":"type","title":"Manager.Type.recover_login_response/0","doc":"","ref":"Manager.Type.html#t:recover_login_response/0"},{"type":"type","title":"Manager.Type.strategies_response/0","doc":"","ref":"Manager.Type.html#t:strategies_response/0"},{"type":"type","title":"Manager.Type.syndicates_response/0","doc":"","ref":"Manager.Type.html#t:syndicates_response/0"},{"type":"module","title":"Shared","doc":"Holds general utility functions used across all the project, as well as the\nDataStructures and Types used to represent the Domain.","ref":"Shared.html"},{"type":"module","title":"Shared.Data.Authorization","doc":"Saves authorization details for a user.","ref":"Shared.Data.Authorization.html"},{"type":"function","title":"Shared.Data.Authorization.new/1","doc":"","ref":"Shared.Data.Authorization.html#new/1"},{"type":"type","title":"Shared.Data.Authorization.authorization/0","doc":"","ref":"Shared.Data.Authorization.html#t:authorization/0"},{"type":"type","title":"Shared.Data.Authorization.t/0","doc":"Authorization information for a user","ref":"Shared.Data.Authorization.html#t:t/0"},{"type":"module","title":"Shared.Data.Credentials","doc":"Represents the credentials of an user. Credentials are used to get access\nto Authorization and User info, which is the used to makes requests to the\nmarket.","ref":"Shared.Data.Credentials.html"},{"type":"function","title":"Shared.Data.Credentials.new/2","doc":"","ref":"Shared.Data.Credentials.html#new/2"},{"type":"type","title":"Shared.Data.Credentials.t/0","doc":"The credentials","ref":"Shared.Data.Credentials.html#t:t/0"},{"type":"module","title":"Shared.Data.Order","doc":"Represents an order to be made to warframe market. There are two types of\norders thus far, RankedOrders and SimpleOrders. See respective files for more\ninformation.","ref":"Shared.Data.Order.html"},{"type":"function","title":"Shared.Data.Order.new/1","doc":"","ref":"Shared.Data.Order.html#new/1"},{"type":"type","title":"Shared.Data.Order.order/0","doc":"","ref":"Shared.Data.Order.html#t:order/0"},{"type":"type","title":"Shared.Data.Order.t/0","doc":"","ref":"Shared.Data.Order.html#t:t/0"},{"type":"module","title":"Shared.Data.Order.RankedOrder","doc":"Represents an order to be made to warframe market with a rank.","ref":"Shared.Data.Order.RankedOrder.html"},{"type":"function","title":"Shared.Data.Order.RankedOrder.new/1","doc":"","ref":"Shared.Data.Order.RankedOrder.html#new/1"},{"type":"type","title":"Shared.Data.Order.RankedOrder.ranked_order/0","doc":"","ref":"Shared.Data.Order.RankedOrder.html#t:ranked_order/0"},{"type":"type","title":"Shared.Data.Order.RankedOrder.t/0","doc":"An order.","ref":"Shared.Data.Order.RankedOrder.html#t:t/0"},{"type":"module","title":"Shared.Data.Order.SimpleOrder","doc":"Represents an order to be made to warframe market without a rank.","ref":"Shared.Data.Order.SimpleOrder.html"},{"type":"function","title":"Shared.Data.Order.SimpleOrder.new/1","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#new/1"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.simple_order/0","doc":"","ref":"Shared.Data.Order.SimpleOrder.html#t:simple_order/0"},{"type":"type","title":"Shared.Data.Order.SimpleOrder.t/0","doc":"An order.","ref":"Shared.Data.Order.SimpleOrder.html#t:t/0"},{"type":"module","title":"Shared.Data.OrderInfo","doc":"Represents information about current orders from warframe market.","ref":"Shared.Data.OrderInfo.html"},{"type":"function","title":"Shared.Data.OrderInfo.new/1","doc":"","ref":"Shared.Data.OrderInfo.html#new/1"},{"type":"type","title":"Shared.Data.OrderInfo.order_info/0","doc":"","ref":"Shared.Data.OrderInfo.html#t:order_info/0"},{"type":"type","title":"Shared.Data.OrderInfo.t/0","doc":"Information about an order","ref":"Shared.Data.OrderInfo.html#t:t/0"},{"type":"module","title":"Shared.Data.OrderInfo.User","doc":"Represents the account information for a warframe.market User who has an order\nposted.","ref":"Shared.Data.OrderInfo.User.html"},{"type":"function","title":"Shared.Data.OrderInfo.User.new/1","doc":"","ref":"Shared.Data.OrderInfo.User.html#new/1"},{"type":"type","title":"Shared.Data.OrderInfo.User.t/0","doc":"Account information of an User","ref":"Shared.Data.OrderInfo.User.html#t:t/0"},{"type":"type","title":"Shared.Data.OrderInfo.User.user/0","doc":"","ref":"Shared.Data.OrderInfo.User.html#t:user/0"},{"type":"module","title":"Shared.Data.PlacedOrder","doc":"Represents an order that was placed by the User of this application. I could\nhave used OrderInfo as well, but since the later one has a ton of information\nI don't really need/want to deal with, I opted for this instead.","ref":"Shared.Data.PlacedOrder.html"},{"type":"function","title":"Shared.Data.PlacedOrder.new/1","doc":"","ref":"Shared.Data.PlacedOrder.html#new/1"},{"type":"type","title":"Shared.Data.PlacedOrder.placed_order/0","doc":"","ref":"Shared.Data.PlacedOrder.html#t:placed_order/0"},{"type":"type","title":"Shared.Data.PlacedOrder.t/0","doc":"A PlacedOrder","ref":"Shared.Data.PlacedOrder.html#t:t/0"},{"type":"module","title":"Shared.Data.Product","doc":"A Product is an item we can create a sell order for. Currently we only\nsupport mods. Products contain warframe.market information about the item, as\nwell as default parameters to create sell orders.","ref":"Shared.Data.Product.html"},{"type":"function","title":"Shared.Data.Product.new/1","doc":"","ref":"Shared.Data.Product.html#new/1"},{"type":"type","title":"Shared.Data.Product.product/0","doc":"","ref":"Shared.Data.Product.html#t:product/0"},{"type":"type","title":"Shared.Data.Product.t/0","doc":"Product details","ref":"Shared.Data.Product.html#t:t/0"},{"type":"module","title":"Shared.Data.Strategy","doc":"A strategy for selling a product.","ref":"Shared.Data.Strategy.html"},{"type":"function","title":"Shared.Data.Strategy.new/1","doc":"","ref":"Shared.Data.Strategy.html#new/1"},{"type":"type","title":"Shared.Data.Strategy.strategy/0","doc":"","ref":"Shared.Data.Strategy.html#t:strategy/0"},{"type":"type","title":"Shared.Data.Strategy.t/0","doc":"Strategy details","ref":"Shared.Data.Strategy.html#t:t/0"},{"type":"module","title":"Shared.Data.Syndicate","doc":"A syndicate is a party with tradable items.","ref":"Shared.Data.Syndicate.html"},{"type":"function","title":"Shared.Data.Syndicate.new/1","doc":"","ref":"Shared.Data.Syndicate.html#new/1"},{"type":"type","title":"Shared.Data.Syndicate.syndicate/0","doc":"","ref":"Shared.Data.Syndicate.html#t:syndicate/0"},{"type":"type","title":"Shared.Data.Syndicate.t/0","doc":"Syndicate details","ref":"Shared.Data.Syndicate.html#t:t/0"},{"type":"module","title":"Shared.Data.User","doc":"Represents relevant User information for clients using this AuctionHouse.","ref":"Shared.Data.User.html"},{"type":"function","title":"Shared.Data.User.new/1","doc":"","ref":"Shared.Data.User.html#new/1"},{"type":"type","title":"Shared.Data.User.t/0","doc":"User information","ref":"Shared.Data.User.html#t:t/0"},{"type":"type","title":"Shared.Data.User.user/0","doc":"","ref":"Shared.Data.User.html#t:user/0"},{"type":"module","title":"Shared.Utils.ExtraGuards","doc":"Contains additional guards to use in functions.","ref":"Shared.Utils.ExtraGuards.html"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_non_neg_integer/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_non_neg_integer/1"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_non_neg_number/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_non_neg_number/1"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_pos_integer/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_pos_integer/1"},{"type":"macro","title":"Shared.Utils.ExtraGuards.is_pos_number/1","doc":"","ref":"Shared.Utils.ExtraGuards.html#is_pos_number/1"},{"type":"module","title":"Shared.Utils.Maps","doc":"Set of utility functions used across the app to help with Map operations.","ref":"Shared.Utils.Maps.html"},{"type":"function","title":"Shared.Utils.Maps.to_string_map/1","doc":"Converts a string map to an atom map. Only goes 1 level deep and is not\nrecursive.","ref":"Shared.Utils.Maps.html#to_string_map/1"},{"type":"module","title":"Shared.Utils.Structs","doc":"Set of utility functions used across the app to help with Struct operations.","ref":"Shared.Utils.Structs.html"},{"type":"function","title":"Shared.Utils.Structs.data_to_struct/2","doc":"Converts the given enumerable into teh given struct.","ref":"Shared.Utils.Structs.html#data_to_struct/2"},{"type":"function","title":"Shared.Utils.Structs.string_map_to_struct/2","doc":"Converts given string map into the given struct.","ref":"Shared.Utils.Structs.html#string_map_to_struct/2"},{"type":"module","title":"Shared.Utils.Tuples","doc":"Set of utility functions used across the app to help with Tuple operations.","ref":"Shared.Utils.Tuples.html"},{"type":"function","title":"Shared.Utils.Tuples.from_tagged_tuple/1","doc":"Retrieves the data from a given OK tagged tuple.","ref":"Shared.Utils.Tuples.html#from_tagged_tuple/1"},{"type":"function","title":"Shared.Utils.Tuples.is_ok?/1","doc":"Returns whether or not a tagged tuple is of type OK.","ref":"Shared.Utils.Tuples.html#is_ok?/1"},{"type":"function","title":"Shared.Utils.Tuples.to_tagged_tuple/1","doc":"Places the given data into an OK tagged tuple.","ref":"Shared.Utils.Tuples.html#to_tagged_tuple/1"},{"type":"module","title":"Store","doc":"Port for the persistency layer.\nThis module contains the Public API for the storage app.","ref":"Store.html"},{"type":"function","title":"Store.delete_login_data/0","doc":"Deletes any login information from the storage system.\n\nExample:\n```\n> Store.delete_login_data()\n:ok\n\n> Store.delete_login_data()\n{:error, :enoent}\n```","ref":"Store.html#delete_login_data/0"},{"type":"function","title":"Store.delete_order/2","doc":"Deletes the given placed_order from the given syndicate from the storage system.\n\nExample:\n```\n> alias Shared.Data.{PlacedOrder, Syndicate}\n\n> Store.delete_order(\n  %PlacedOrder{item_name: \"Exothermic\", order_id: \"5526aec1e779896af9418266\"},\n  Syndicate.new(name: \"Red Veil\", id: :red_veil, catalog: [])\n)\n:ok\n\n> invalid_syndicate = Syndicate.new(name: \"Bad Synd\", id: :bad_syndicate, catalog: [])\n> Store.delete_order(invalid_syndicate)\n{:error, :enoent}\n```","ref":"Store.html#delete_order/2"},{"type":"function","title":"Store.get_login_data/0","doc":"Retrieves the user's login data from Storage.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n\n> Store.get_login_data()\n{:ok, {\n  %Authorization{token: \"a_token\", cookie: \"a_cookie\"},\n  %User{ingame_name: \"username\", patreon?: false}\n}}\n\n> Store.get_login_data()\n{:error, :enoent}\n```","ref":"Store.html#get_login_data/0"},{"type":"function","title":"Store.list_active_syndicates/0","doc":"Returns the syndicates currently active. An active syndicate is a syndicate with orders in `current_orders`.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> Store.list_active_syndicates()\n{:ok, [%Syndicate{name: \"Red Veil\", id: :red_veil, catalog: []}, %Syndicate{name: \"New Loka\", id: :new_loka, catalog: []}]}\n\n> Store.list_active_syndicates()\n{:error, :enoent}\n```","ref":"Store.html#list_active_syndicates/0"},{"type":"function","title":"Store.list_orders/1","doc":"Lists all placed orders from the given syndicate.\n\nExample:\n```\n> alias Shared.Data.{PlacedOrder, Syndicate}\n\n> syndicate = Syndicate.new(name: \"Red Veil\", id: :red_veil, catalog: [])\n> Store.list_orders(syndicate)\n{:ok, [\n  %PlacedOrder{item_name: \"Exothermic\", order_id: \"5526aec1e779896af9418266\"},\n  %PlacedOrder{item_name: \"Tribunal\", order_id: \"5ea087d1c160d001303f9ed7\"},\n  ...\n]}\n\n> invalid_syndicate = Syndicate.new(name: \"Bad Synd\", id: :bad_syndicate)\n> Store.list_orders(invalid_syndicate)\n{:error, :syndicate_not_found}\n```","ref":"Store.html#list_orders/1"},{"type":"function","title":"Store.list_products/1","doc":"Lists the products from the given syndicate.\n\nExample:\n```\n> alias Shared.Data.{Product, Syndicate}\n\n> syndicate = Syndicate.new(name: \"Red Veil\", id: :red_veil, catalog: [])\n> Store.list_products(syndicate)\n{:ok, [\n  %Product{\n    name: \"Eternal War\",\n    id: \"8ee5b3b0-fa43-4dbc-9363-a52930dc742e\",\n    min_price: 14,\n    default_price: 15,\n    quantity: 1,\n    rank: 0\n  },\n  ...\n]}\n\n> invalid_syndicate = Syndicate.new(name: \"Bad Synd\", id: :bad_syndicate, catalog: [])\n> Store.list_products(invalid_syndicate)\n{:error, :syndicate_not_found}\n```","ref":"Store.html#list_products/1"},{"type":"function","title":"Store.list_syndicates/0","doc":"Returns all the syndicates currently stored. The fact a syndicate is stored does not mean it has products, nor orders.\n\nExample:\n```\n> alias Shared.Data.Syndicate\n\n> Store.list_syndicates()\n{:ok, [%Syndicate{name: \"Red Veil\", id: :red_veil, catalog: []}, %Syndicate{name: \"New Loka\", id: :new_loka, catalog: []}]}\n\n> Store.list_syndicates()\n{:error, :enoent}\n```","ref":"Store.html#list_syndicates/0"},{"type":"function","title":"Store.save_login_data/2","doc":"Saves the login information from the user into the storage system.\nDoes not perform validation.\n\nExample:\n```\n> alias Shared.Data.{Authorization, User}\n\n> Store.save_login_data(\n  %Authorization{token: \"a_token\", cookie: \"a_cookie\"},\n  %User{ingame_name: \"username\", patreon?: false}\n)\n:ok\n\n> Store.save_login_data(\n  %Authorization{token: \"a_token\", cookie: \"a_cookie\"},\n  %User{ingame_name: \"username\", patreon?: false}\n)\n{:error, :enoent}\n```","ref":"Store.html#save_login_data/2"},{"type":"function","title":"Store.save_order/2","doc":"Saves the given placed_order for the given syndicate in the storage system.\n\nExample:\n```\n> alias Shared.Data.{PlacedOrder, Syndicate}\n\n> Store.save_order(\n  %PlacedOrder{item_name: \"Exothermic\", order_id: \"5526aec1e779896af9418266\"},\n  Syndicate.new(name: \"Red Veil\", id: :red_veil, catalog: [])\n)\n:ok\n\n> invalid_syndicate = Syndicate.new(name: \"Bad Synd\", id: :bad_syndicate, catalog: [])\n> Store.save_order(invalid_syndicate)\n{:error, :enoent}\n```","ref":"Store.html#save_order/2"},{"type":"module","title":"Store.FileSystem","doc":"Adapter for the Store port, implements it using the file system.","ref":"Store.FileSystem.html"},{"type":"function","title":"Store.FileSystem.delete_login_data/1","doc":"","ref":"Store.FileSystem.html#delete_login_data/1"},{"type":"function","title":"Store.FileSystem.delete_order/3","doc":"","ref":"Store.FileSystem.html#delete_order/3"},{"type":"function","title":"Store.FileSystem.get_login_data/1","doc":"","ref":"Store.FileSystem.html#get_login_data/1"},{"type":"function","title":"Store.FileSystem.list_active_syndicates/1","doc":"","ref":"Store.FileSystem.html#list_active_syndicates/1"},{"type":"function","title":"Store.FileSystem.list_orders/2","doc":"","ref":"Store.FileSystem.html#list_orders/2"},{"type":"function","title":"Store.FileSystem.list_products/2","doc":"","ref":"Store.FileSystem.html#list_products/2"},{"type":"function","title":"Store.FileSystem.list_syndicates/1","doc":"","ref":"Store.FileSystem.html#list_syndicates/1"},{"type":"function","title":"Store.FileSystem.save_login_data/3","doc":"","ref":"Store.FileSystem.html#save_login_data/3"},{"type":"function","title":"Store.FileSystem.save_order/3","doc":"","ref":"Store.FileSystem.html#save_order/3"},{"type":"module","title":"Store.Type","doc":"Contains the types for the Store library.\nBecause we separate this file from the API and implementation, we also avoid\na cyclical dependency between them.","ref":"Store.Type.html"},{"type":"type","title":"Store.Type.all_orders_store/0","doc":"","ref":"Store.Type.html#t:all_orders_store/0"},{"type":"type","title":"Store.Type.delete_login_data_response/0","doc":"","ref":"Store.Type.html#t:delete_login_data_response/0"},{"type":"type","title":"Store.Type.delete_order_response/0","doc":"","ref":"Store.Type.html#t:delete_order_response/0"},{"type":"type","title":"Store.Type.dependencies/0","doc":"","ref":"Store.Type.html#t:dependencies/0"},{"type":"type","title":"Store.Type.get_login_data_response/0","doc":"","ref":"Store.Type.html#t:get_login_data_response/0"},{"type":"type","title":"Store.Type.list_active_syndicates_response/0","doc":"","ref":"Store.Type.html#t:list_active_syndicates_response/0"},{"type":"type","title":"Store.Type.list_orders_response/0","doc":"","ref":"Store.Type.html#t:list_orders_response/0"},{"type":"type","title":"Store.Type.list_products_response/0","doc":"","ref":"Store.Type.html#t:list_products_response/0"},{"type":"type","title":"Store.Type.list_syndicates_response/0","doc":"","ref":"Store.Type.html#t:list_syndicates_response/0"},{"type":"type","title":"Store.Type.save_login_data_response/0","doc":"","ref":"Store.Type.html#t:save_login_data_response/0"},{"type":"type","title":"Store.Type.save_order_response/0","doc":"","ref":"Store.Type.html#t:save_order_response/0"},{"type":"module","title":"WebInterface","doc":"The entrypoint for defining your web interface, such\nas controllers, components, channels, and so on.\n\nThis can be used in your application as:\n\n    use WebInterface, :controller\n    use WebInterface, :html\n\nThe definitions below will be executed for every controller,\ncomponent, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define additional modules and import\nthose modules here.","ref":"WebInterface.html"},{"type":"macro","title":"WebInterface.__using__/1","doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"WebInterface.html#__using__/1"},{"type":"function","title":"WebInterface.channel/0","doc":"","ref":"WebInterface.html#channel/0"},{"type":"function","title":"WebInterface.controller/0","doc":"","ref":"WebInterface.html#controller/0"},{"type":"function","title":"WebInterface.html/0","doc":"","ref":"WebInterface.html#html/0"},{"type":"function","title":"WebInterface.live_component/0","doc":"","ref":"WebInterface.html#live_component/0"},{"type":"function","title":"WebInterface.live_view/0","doc":"","ref":"WebInterface.html#live_view/0"},{"type":"function","title":"WebInterface.router/0","doc":"","ref":"WebInterface.html#router/0"},{"type":"function","title":"WebInterface.static_paths/0","doc":"","ref":"WebInterface.html#static_paths/0"},{"type":"function","title":"WebInterface.verified_routes/0","doc":"","ref":"WebInterface.html#verified_routes/0"},{"type":"module","title":"WebInterface.ActivateLive","doc":"","ref":"WebInterface.ActivateLive.html"},{"type":"function","title":"WebInterface.ActivateLive.disable_button?/3","doc":"","ref":"WebInterface.ActivateLive.html#disable_button?/3"},{"type":"function","title":"WebInterface.ActivateLive.progress_bar_message/1","doc":"","ref":"WebInterface.ActivateLive.html#progress_bar_message/1"},{"type":"function","title":"WebInterface.ActivateLive.render/1","doc":"","ref":"WebInterface.ActivateLive.html#render/1"},{"type":"module","title":"WebInterface.Components.OperationProgress","doc":"LiveView subcomponent for the Operation Progress Page. It hides both sidebar and main\nsubcomponents and displays information about operations taking place.\n\nSends messages back to the `windows` component.","ref":"WebInterface.Components.OperationProgress.html"},{"type":"function","title":"WebInterface.Components.OperationProgress.render/1","doc":"","ref":"WebInterface.Components.OperationProgress.html#render/1"},{"type":"module","title":"WebInterface.CoreComponents","doc":"Provides core UI components.\n\nAt the first glance, this module may seem daunting, but its goal is\nto provide some core building blocks in your application, such modals,\ntables, and forms. The components are mostly markup and well documented\nwith doc strings and declarative assigns. You may customize and style\nthem in any way you want, based on your application growth and needs.\n\nThe default components use Tailwind CSS, a utility-first CSS framework.\nSee the [Tailwind CSS documentation](https://tailwindcss.com) to learn\nhow to customize them or feel free to swap in another framework altogether.\n\nIcons are provided by [heroicons](https://heroicons.com). See `icon/1` for usage.","ref":"WebInterface.CoreComponents.html"},{"type":"function","title":"WebInterface.CoreComponents.back/1","doc":"Renders a back navigation link.","ref":"WebInterface.CoreComponents.html#back/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.back/1","doc":"Back to posts","ref":"WebInterface.CoreComponents.html#back/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.back/1","doc":"* `navigate` (`:any`) (required)","ref":"WebInterface.CoreComponents.html#back/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.back/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#back/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.button/1","doc":"Renders a button.","ref":"WebInterface.CoreComponents.html#button/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.button/1","doc":"Send! \n     Send!","ref":"WebInterface.CoreComponents.html#button/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.button/1","doc":"* `type` (`:string`) - Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* `disabled` (`:boolean`) - Defaults to `false`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#button/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.button/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#button/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.checkgroup/1","doc":"Generate a checkbox group for multi-select.","ref":"WebInterface.CoreComponents.html#checkgroup/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.checkgroup/1","doc":"","ref":"WebInterface.CoreComponents.html#checkgroup/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.checkgroup/1","doc":"* `name` (`:any`)\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:genres].\n* `required` (`:boolean`) - Defaults to `false`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2. Defaults to `[]`.\n* `disabled` (`:list`) - the list of options that are disabled. Defaults to `[]`.\n* `selected` (`:list`) - the currently selected options, to know which boxes are checked. Defaults to `[]`.","ref":"WebInterface.CoreComponents.html#checkgroup/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.description/1","doc":"Renders a description paragraph.","ref":"WebInterface.CoreComponents.html#description/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.description/1","doc":"Some description here!","ref":"WebInterface.CoreComponents.html#description/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.description/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#description/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.description/1","doc":"* `inner_block` (required) - the text representing a description.","ref":"WebInterface.CoreComponents.html#description/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.error/1","doc":"Generates a generic error message.","ref":"WebInterface.CoreComponents.html#error/1"},{"type":"function","title":"Slots - WebInterface.CoreComponents.error/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#error/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.flash/1","doc":"Renders flash notices.","ref":"WebInterface.CoreComponents.html#flash/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.flash/1","doc":"Welcome Back!","ref":"WebInterface.CoreComponents.html#flash/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.flash/1","doc":"* `id` (`:string`) - the optional id of flash container. Defaults to `\"flash\"`.\n* `flash` (`:map`) - the map of flash messages to display. Defaults to `%{}`.\n* `title` (`:string`) - Defaults to `nil`.\n* `kind` (`:atom`) - used for styling and flash lookup.Must be one of `:info`, or `:error`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#flash/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.flash/1","doc":"* `inner_block` - the optional inner block that renders the flash message.","ref":"WebInterface.CoreComponents.html#flash/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.flash_group/1","doc":"Shows the flash group with standard titles and content.","ref":"WebInterface.CoreComponents.html#flash_group/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.flash_group/1","doc":"","ref":"WebInterface.CoreComponents.html#flash_group/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.flash_group/1","doc":"* `flash` (`:map`) (required) - the map of flash messages.","ref":"WebInterface.CoreComponents.html#flash_group/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.header/1","doc":"Renders a header with title.","ref":"WebInterface.CoreComponents.html#header/1"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.header/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#header/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.header/1","doc":"* `inner_block` (required)\n* `subtitle`\n* `actions`","ref":"WebInterface.CoreComponents.html#header/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.hide/2","doc":"","ref":"WebInterface.CoreComponents.html#hide/2"},{"type":"function","title":"WebInterface.CoreComponents.hide_dropdown/1","doc":"","ref":"WebInterface.CoreComponents.html#hide_dropdown/1"},{"type":"function","title":"WebInterface.CoreComponents.hide_modal/2","doc":"","ref":"WebInterface.CoreComponents.html#hide_modal/2"},{"type":"function","title":"WebInterface.CoreComponents.icon/1","doc":"Renders a [Hero Icon](https://heroicons.com).\n\nHero icons come in three styles – outline, solid, and mini.\nBy default, the outline style is used, but solid an mini may\nbe applied by using the `-solid` and `-mini` suffix.\n\nYou can customize the size and colors of the icons by setting\nwidth, height, and background color classes.\n\nIcons are extracted from your `assets/vendor/heroicons` directory and bundled\nwithin your compiled app.css by the plugin in your `assets/tailwind.config.js`.","ref":"WebInterface.CoreComponents.html#icon/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.icon/1","doc":"","ref":"WebInterface.CoreComponents.html#icon/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.icon/1","doc":"* `name` (`:string`) (required)\n* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#icon/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.input/1","doc":"Renders an input with label and error messages.\n\nA `%Phoenix.HTML.Form{}` and field name may be passed to the input\nto build input names and error messages, or all the attributes and\nerrors may be passed explicitly.","ref":"WebInterface.CoreComponents.html#input/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.input/1","doc":"","ref":"WebInterface.CoreComponents.html#input/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.input/1","doc":"* `id` (`:any`) - Defaults to `nil`.\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `value` (`:any`)\n* `type` (`:string`) - Defaults to `\"text\"`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:email].\n* `errors` (`:list`) - Defaults to `[]`.\n* `checked` (`:boolean`) - the checked flag for checkbox inputs.\n* `prompt` (`:string`) - the prompt for select inputs. Defaults to `nil`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `multiple` (`:boolean`) - the multiple flag for select inputs. Defaults to `false`.\n* `selected` (`:any`) - the currently selected option, to know which input(s) is/are currently selected. Defaults to `[]`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#input/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.input/1","doc":"* `inner_block`","ref":"WebInterface.CoreComponents.html#input/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.label/1","doc":"Renders a label.","ref":"WebInterface.CoreComponents.html#label/1"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.label/1","doc":"* `for` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#label/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.label/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#label/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.list/1","doc":"Renders a data list.","ref":"WebInterface.CoreComponents.html#list/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.list/1","doc":"","ref":"WebInterface.CoreComponents.html#list/1-examples"},{"type":"function","title":"Slots - WebInterface.CoreComponents.list/1","doc":"* `item` (required) - Accepts attributes:\n\n  * `title` (`:string`) (required)","ref":"WebInterface.CoreComponents.html#list/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.modal/1","doc":"Renders a modal.","ref":"WebInterface.CoreComponents.html#modal/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.modal/1","doc":"This is a modal.\n     \n\nJS commands may be passed to the `:on_cancel` to configure\nthe closing/cancel event, for example:\n\n     \n      This is another modal.","ref":"WebInterface.CoreComponents.html#modal/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.modal/1","doc":"* `id` (`:string`) (required)\n* `show` (`:boolean`) - Defaults to `false`.\n* `on_cancel` (`Phoenix.LiveView.JS`) - Defaults to `%Phoenix.LiveView.JS{ops: []}`.","ref":"WebInterface.CoreComponents.html#modal/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.modal/1","doc":"* `inner_block` (required)","ref":"WebInterface.CoreComponents.html#modal/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.progress_bar/1","doc":"Renders a progress bar for an ongoing operation.","ref":"WebInterface.CoreComponents.html#progress_bar/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.progress_bar/1","doc":"","ref":"WebInterface.CoreComponents.html#progress_bar/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.progress_bar/1","doc":"* `hidden` (`:boolean`) - whether or not to show the progress bar. Defaults to `false`.\n* `progress` (`:integer`) - the current progress of the bar. Defaults to `0`.\n* `message` (`:string`) - the message to show while the bar is progressing. Defaults to `\"Operation in progress ...\"`.\n* `class` (`:string`) - Defaults to `nil`.","ref":"WebInterface.CoreComponents.html#progress_bar/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.radiogroup/1","doc":"Generate a radio button group.","ref":"WebInterface.CoreComponents.html#radiogroup/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.radiogroup/1","doc":"","ref":"WebInterface.CoreComponents.html#radiogroup/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.radiogroup/1","doc":"* `id` (`:any`)\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:genres].\n* `errors` (`:list`)\n* `required` (`:boolean`) - Defaults to `false`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `class` (`:string`) - Defaults to `nil`.\n* `selected` (`:any`) - the currently selected option, to know which radio button is checked. Defaults to `nil`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#radiogroup/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.section/1","doc":"Renders the title and description for a new section.","ref":"WebInterface.CoreComponents.html#section/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.section/1","doc":"","ref":"WebInterface.CoreComponents.html#section/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.section/1","doc":"* `title` (`:string`) (required) - the title of the section.\n* `description` (`:string`) (required) - the description of the section.","ref":"WebInterface.CoreComponents.html#section/1-attributes"},{"type":"function","title":"WebInterface.CoreComponents.show/2","doc":"","ref":"WebInterface.CoreComponents.html#show/2"},{"type":"function","title":"WebInterface.CoreComponents.show_modal/2","doc":"","ref":"WebInterface.CoreComponents.html#show_modal/2"},{"type":"function","title":"WebInterface.CoreComponents.simple_form/1","doc":"Renders a simple form.","ref":"WebInterface.CoreComponents.html#simple_form/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.simple_form/1","doc":"Save","ref":"WebInterface.CoreComponents.html#simple_form/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.simple_form/1","doc":"* `for` (`:any`) (required) - the data-structure for the form.\n* `as` (`:any`) - the server side parameter to collect all input under. Defaults to `nil`.\nGlobal attributes are accepted.","ref":"WebInterface.CoreComponents.html#simple_form/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.simple_form/1","doc":"* `inner_block` (required)\n* `actions` - the slot for form actions, such as a submit button.","ref":"WebInterface.CoreComponents.html#simple_form/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.table/1","doc":"Renders a table with generic styling.","ref":"WebInterface.CoreComponents.html#table/1"},{"type":"function","title":"Examples - WebInterface.CoreComponents.table/1","doc":"","ref":"WebInterface.CoreComponents.html#table/1-examples"},{"type":"function","title":"Attributes - WebInterface.CoreComponents.table/1","doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"WebInterface.CoreComponents.html#table/1-attributes"},{"type":"function","title":"Slots - WebInterface.CoreComponents.table/1","doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"WebInterface.CoreComponents.html#table/1-slots"},{"type":"function","title":"WebInterface.CoreComponents.toggle_dropdown/1","doc":"","ref":"WebInterface.CoreComponents.html#toggle_dropdown/1"},{"type":"function","title":"WebInterface.CoreComponents.translate_error/1","doc":"Translates an error message using gettext.","ref":"WebInterface.CoreComponents.html#translate_error/1"},{"type":"function","title":"WebInterface.CoreComponents.translate_errors/2","doc":"Translates the errors for a field from a keyword list of errors.","ref":"WebInterface.CoreComponents.html#translate_errors/2"},{"type":"module","title":"WebInterface.DeactivateLive","doc":"","ref":"WebInterface.DeactivateLive.html"},{"type":"function","title":"WebInterface.DeactivateLive.disable_button?/2","doc":"","ref":"WebInterface.DeactivateLive.html#disable_button?/2"},{"type":"function","title":"WebInterface.DeactivateLive.progress_bar_message/1","doc":"","ref":"WebInterface.DeactivateLive.html#progress_bar_message/1"},{"type":"function","title":"WebInterface.DeactivateLive.render/1","doc":"","ref":"WebInterface.DeactivateLive.html#render/1"},{"type":"module","title":"WebInterface.Desktop.MenuBar","doc":"Menubar that is shown as part of the main Window on Windows/Linux. In\nMacOS this Menubar appears at the very top of the screen.","ref":"WebInterface.Desktop.MenuBar.html"},{"type":"module","title":"WebInterface.Desktop.WindowUtils","doc":"Contains utility functions to determine window attributes.","ref":"WebInterface.Desktop.WindowUtils.html"},{"type":"function","title":"WebInterface.Desktop.WindowUtils.calculate_window_size/2","doc":"Calculates the width and height for the window. Fetches the display\ninformation using :wx. Because we create a :wx server every time we call this\nfunction this is a heavy operation and should be used cautiously.\n\nBoth percentages given must be > 0 and <= 1.","ref":"WebInterface.Desktop.WindowUtils.html#calculate_window_size/2"},{"type":"module","title":"WebInterface.ErrorHTML","doc":"","ref":"WebInterface.ErrorHTML.html"},{"type":"function","title":"WebInterface.ErrorHTML.render/2","doc":"","ref":"WebInterface.ErrorHTML.html#render/2"},{"type":"module","title":"WebInterface.ErrorJSON","doc":"","ref":"WebInterface.ErrorJSON.html"},{"type":"function","title":"WebInterface.ErrorJSON.render/2","doc":"","ref":"WebInterface.ErrorJSON.html#render/2"},{"type":"module","title":"WebInterface.LoginLive","doc":"","ref":"WebInterface.LoginLive.html"},{"type":"function","title":"WebInterface.LoginLive.render/1","doc":"","ref":"WebInterface.LoginLive.html#render/1"},{"type":"module","title":"WebInterface.LogoutLive","doc":"","ref":"WebInterface.LogoutLive.html"},{"type":"module","title":"WebInterface.PageController","doc":"","ref":"WebInterface.PageController.html"},{"type":"function","title":"WebInterface.PageController.home/2","doc":"","ref":"WebInterface.PageController.html#home/2"},{"type":"module","title":"WebInterface.PageHTML","doc":"","ref":"WebInterface.PageHTML.html"},{"type":"function","title":"WebInterface.PageHTML.home/1","doc":"","ref":"WebInterface.PageHTML.html#home/1"},{"type":"module","title":"WebInterface.Persistence","doc":"Responsible for temporary persistence in WebInterface. Saves state that needs to be shared between LiveViews.\nUses ETS beneath the scenes.","ref":"WebInterface.Persistence.html"},{"type":"function","title":"WebInterface.Persistence.init/3","doc":"","ref":"WebInterface.Persistence.html#init/3"},{"type":"function","title":"WebInterface.Persistence.table/0","doc":"","ref":"WebInterface.Persistence.html#table/0"},{"type":"module","title":"WebInterface.Persistence.Button","doc":"Persistence module to know which buttons are selected.","ref":"WebInterface.Persistence.Button.html"},{"type":"function","title":"WebInterface.Persistence.Button.button_selected?/1","doc":"","ref":"WebInterface.Persistence.Button.html#button_selected?/1"},{"type":"function","title":"WebInterface.Persistence.Button.get_button/0","doc":"","ref":"WebInterface.Persistence.Button.html#get_button/0"},{"type":"function","title":"WebInterface.Persistence.Button.set_button/1","doc":"","ref":"WebInterface.Persistence.Button.html#set_button/1"},{"type":"module","title":"WebInterface.Persistence.Strategy","doc":"Persistence module for strategy data. Mostly to track which strategy is selected in the menu and access the list of strategies.","ref":"WebInterface.Persistence.Strategy.html"},{"type":"function","title":"WebInterface.Persistence.Strategy.get_selected_strategy/0","doc":"","ref":"WebInterface.Persistence.Strategy.html#get_selected_strategy/0"},{"type":"function","title":"WebInterface.Persistence.Strategy.get_strategies/0","doc":"","ref":"WebInterface.Persistence.Strategy.html#get_strategies/0"},{"type":"function","title":"WebInterface.Persistence.Strategy.get_strategy_by_id/1","doc":"","ref":"WebInterface.Persistence.Strategy.html#get_strategy_by_id/1"},{"type":"function","title":"WebInterface.Persistence.Strategy.set_selected_strategy/1","doc":"","ref":"WebInterface.Persistence.Strategy.html#set_selected_strategy/1"},{"type":"module","title":"WebInterface.Persistence.Syndicate","doc":"Persistence module for syndicate data. Mostly to track selected options in the menu and access the list of syndicates.","ref":"WebInterface.Persistence.Syndicate.html"},{"type":"function","title":"WebInterface.Persistence.Syndicate.activate_syndicate/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#activate_syndicate/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.all_syndicates_active?/0","doc":"","ref":"WebInterface.Persistence.Syndicate.html#all_syndicates_active?/0"},{"type":"function","title":"WebInterface.Persistence.Syndicate.deactivate_syndicate/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#deactivate_syndicate/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_active_syndicates/0","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_active_syndicates/0"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_all_syndicates_by_id/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_all_syndicates_by_id/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_inactive_syndicates/0","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_inactive_syndicates/0"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_selected_active_syndicates/0","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_selected_active_syndicates/0"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_selected_inactive_syndicates/0","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_selected_inactive_syndicates/0"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_syndicate_by_id/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_syndicate_by_id/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.get_syndicates/0","doc":"","ref":"WebInterface.Persistence.Syndicate.html#get_syndicates/0"},{"type":"function","title":"WebInterface.Persistence.Syndicate.set_selected_active_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#set_selected_active_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.set_selected_inactive_syndicates/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#set_selected_inactive_syndicates/1"},{"type":"function","title":"WebInterface.Persistence.Syndicate.syndicate_active?/1","doc":"","ref":"WebInterface.Persistence.Syndicate.html#syndicate_active?/1"},{"type":"module","title":"WebInterface.Persistence.User","doc":"Persistence module for user related data.","ref":"WebInterface.Persistence.User.html"},{"type":"function","title":"WebInterface.Persistence.User.get_user/0","doc":"","ref":"WebInterface.Persistence.User.html#get_user/0"},{"type":"function","title":"WebInterface.Persistence.User.has_user?/0","doc":"","ref":"WebInterface.Persistence.User.html#has_user?/0"},{"type":"function","title":"WebInterface.Persistence.User.set_user/1","doc":"","ref":"WebInterface.Persistence.User.html#set_user/1"},{"type":"module","title":"WebInterface.ProfileLive","doc":"","ref":"WebInterface.ProfileLive.html"},{"type":"function","title":"WebInterface.ProfileLive.render/1","doc":"","ref":"WebInterface.ProfileLive.html#render/1"},{"type":"extras","title":"README","doc":"# MarketManager\n\nMakes sell requests in batch to warframe market.\nUsed when you want to sell a lot of things or remove them from your list all at\nonce. Specially useful for syndicates because you don't have to buy everything\nin advance and then sell. You only need to do 3 things:\n\n- Launch the manager\n- Activate a syndicate(s) you want\n- Sit back and relax\n\nThen, when someone pings you to buy an item, you can go the syndicate, buy it and sell it on the spot.\n\nWarframeMarket (the website) does have a 100 items limit though, so you may want to keep this in mind as you won't be able to activate everything (unless you are a Patreon, in which case the limit does not apply).\n\n# User guide\n\nThis section has some basic references and help for users that want to learn how to use the application.","ref":"readme.html"},{"type":"extras","title":"Setup - README","doc":"Before using this application you need to get access to two things:\n\n1. x-rfctoken from warframe.market\n2. a cookie from warframe.market\n\nTo get both of them you can:\n\n1. Login with your account to warframe.market\n2. Set you status to \"Invisible\"\n3. Go to \"My profile\"\n4. Click \"Place order\" button and fill in the form, BUT DO NOT PRESS \"POST\"\n5. Using your favorite browser enter the developer's console (usually by pressing F12)\n6. Go to the network section of the developer's console, clear it (if it has previous logs) and start monitoring\n7. Press the \"POST\" button on the form\n8. The console should have logged a POST request to the website\n9. Inspect the request and look for \"Request headers\"\n10. Copy the cookie and the token to somewhere\n\nOnce you have the cookie and the token, go to the `Authenticate` menu on the sidebar and save them.\n\nYou are now ready to use the application.","ref":"readme.html#setup"},{"type":"extras","title":"Windowed mode - README","doc":"By default the application will open a separate browser window and it will run there using your localhost.\n\nIf however, you wish to run the application in windowed mode, you can do so by downloading and installing WebView2 support for Edge:\n\n-  \n\nAfter the installation, the application will default to the windowed mode. You can however still use the browser if you wish by going to **Extras -> Open in browser**.","ref":"readme.html#windowed-mode"},{"type":"extras","title":"Usage - README","doc":"The inventory file is called `products.json`. This file contain a list of objects, each one with an array of things to sell alongside some additional information.\n\nIt only supports mods currently.\n\n```json\n{\n    \"red_veil\": [\n        {\n            \"name\": \"Gleaming Blight\",\n            \"id\": \"54a74454e779892d5e5155d5\",\n            \"min_price\": 14,\n            \"default_price\": 16\n        },\n        {\n            \"name\": \"Eroding Blight\",\n            \"id\": \"54a74454e779892d5e5155a0\",\n            \"min_price\": 14,\n            \"default_price\": 16\n        }\n    ],\n    \"new_loka\": [\n        {\n            \"name\": \"Winds of purity\",\n            \"id\": \"54a74455e779892d5e51569a\",\n            \"min_price\": 14,\n            \"default_price\": 16\n        },\n        {\n            \"name\": \"Disarming purity\",\n            \"id\": \"5911f11d97a0add8e9d5da4c\",\n            \"min_price\": 14,\n            \"default_price\": 16\n        }\n    ]\n}\n```\n\nThe format of each item is the following:\n\n```javascript\n{\n  \"name\": \"Disarming purity\",       //name of the item. DON'T TOUCH THIS.\n  \"id\": \"5911f11d97a0add8e9d5da4c\", //warframe.market item id. DON'T TOUCH THIS.\n  \"min_price\": 14,                  //prices are calculated by the chosen strategy. This will override the strategy's price if the calculated price is inferior. A safety net, this is the minimum price you will sell this item for. \n  \"default_price\":16,               //if no one is selling this item or if the strategy was unable to calculate a price for the item, this is the value you will sell it for.\n  \"rank\": 1,                        //rank of the mod, defaults to 0. If the mod has no rank use \"n/a\" instead\n  \"quantity\": 1                     //number of items to sell, defaults to 1\n}\n```\n\nI provide some basic defaults in the `products.json` based on my personal experience. Feel free to change the defaults to your liking. Once this is done, you are ready to go.\n\n# Developer Guide\n\nThis guide describes a developer setup for Windows.","ref":"readme.html#usage"},{"type":"extras","title":"Requirements - README","doc":"- Erlang OTP >= 24:  \n- Elixir >= 1.13 (I recommend the installer):  \n- wxWidget:  \n- While it doesn't require a lot of memory to run, it does require a lot of memory to compile, at least 4GB.\n- If using powershell, you need to have permissions to run scripts: `Set-ExecutionPolicy -ExecutionPolicy Bypass`\n- Install chocolatey:  \n- Install bakeware dependencies: `choco install -y zstandard make mingw`\n- Setup powershell environment variables `$env:CC=\"gcc\"` and `$env:MAKE=\"make\"`\n- An editor of your choice. I use VScode with some plugins and the `Fira Code` font:  \n- To test the application in Windowed mode, you also need to install WebView2 support for Edge. Refer to the **User Guide** section for more information.","ref":"readme.html#requirements"},{"type":"extras","title":"How to run it - README","doc":"After the initial setup, the following commands are used to get started:\n\n- `mix local.hex` to install / update hex\n- `mix archive.install hex phx_new` to install the Phoenix framework\n- `mix deps.get` fetches and installs all the dependencies\n- `mix test` run all tests\n- `mix test.watch` runs all tests continuously and re-runs them every time a file changes","ref":"readme.html#how-to-run-it"},{"type":"extras","title":"Architecture - README","doc":"MarketManager is divided into multiple small applications/libraries, each one with a single purpose in mind:\n\n![dependencies-graph](./deps_graph.svg)\n\n- `web_interface` is a Phoenix application that holds all the code for the front-end.\n- `manager` is the core of the application, the entry point for all user requests. It talks to the rest of the layers.\n- `auction_house` is the app responsible for understanding and making requests to the given auction house. In this case, warframe market.\n- `store` is the persistency layer. It saves your data and remembers what is being sold or not.\n\nFor more information, feel free to read the README file of each application.\n\nA previous version of MarketManager also had a `cli` application interfacing with `manager`. This can still be seen in the `v1` branch, which is being saved for posterity:  \n\nDo note that `v1` was the alpha release and is no longer being supported. It is still a very good resource for applications with CLI interfaces though.","ref":"readme.html#architecture"}],"content_type":"text/markdown"}